{"version":3,"sources":["alrashid-logo.png","Services/SharePoint/GetTaskListitem.js","Services/SharePoint/GetCompletedTask.js","Services/SharePoint/GetCurrentLoinUserID.js","components/sidebar/SideBar.js","Services/SharePoint/GetCurrentLoginUser.js","components/Navbar/Navbar.js","Services/GetPODetails/GetPODetailsbyNumber.js","Services/SharePoint/GetListItemByPONumber.js","Services/GetPODetails/SendOTP.js","components/content/NewPOSearch.js","Services/AttachmentUpload/AttchmentUpload.js","Services/AttachmentUpload/GetAllAttachments.js","Services/AttachmentUpload/DeleteAttachment.js","components/content/FileUpload/FileUpload.js","Services/SharePoint/GetDigest.js","Services/SharePoint/GetListItems.js","Services/SharePoint/CreateListItem.js","Services/AttachmentUpload/CommitAttachments.js","Services/SharePoint/GetListItemByID.js","components/content/NewRequest.js","components/content/MyRequestTable.js","components/content/MyRequests.js","components/content/MyTasksTable.js","components/content/MyTasks.js","components/content/Home.js","Services/SharePoint/PMRequest.js","Services/SharePoint/DMRequestCount.js","Services/SharePoint/PMInBetweenRequest.js","Services/SharePoint/DMInBetweenRequest.js","Services/SharePoint/ApprovalCountInBetween.js","Services/SharePoint/TotaLCountInBetween.js","Services/SharePoint/RejectedInBetween.js","Services/SharePoint/GMInBetweenRequest.js","Services/SharePoint/GMRequestCount.js","Services/SharePoint/ApprovalCount.js","Services/SharePoint/RejectedCount.js","Services/SharePoint/TotalCount.js","components/content/Dashboard.js","Services/SharePoint/GetPOData.js","Services/SharePoint/GetPOInBetween.js","components/content/ExportDateFilter.js","components/content/ExportRequest.js","components/content/MyCompletedTaskTable.js","Services/SharePoint/GetCompletedTaskItem.js","components/content/MyCompletedTask.js","components/content/Content.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","GetTaskListItems","listname","CurrentUserID","a","fetch","headers","resp","json","data","d","results","GetCompletedTask","console","log","length","GetCurrentLoginUserID","method","Id","SideBar","props","state","load","id","className","classNames","this","isOpen","color","onClick","toggle","style","Nav","vertical","NavItem","NavLink","tag","Link","to","icon","faListUl","Component","GetCurrentLoginUser","useState","setOpen","CurrentUser","setCurrentLoginUser","useEffect","GetCurrentUser","then","Title","welcomeStyle","fontWeight","Navbar","light","expand","Button","faAlignLeft","NavbarToggler","src","alt","Collapse","navbar","fontSize","marginTop","faUser","href","faSignOutAlt","GetPODetailsbyNumber","ponumber","ok","JSON","parse","alert","GetListItemByPONumber","SendOTP","recipient","otp","POTablePopup","NewPOSearch","SearchPO","validateSearchInput","setState","POLoading","validateExistingPO","searchInput","POInput","InProgressPO","ApprovedPO","RejectedPO","item","POStatus","indexOf","push","InprogressBody","map","index","key","vwno","chff","POVersion","format","Created","InprogressTable","striped","size","responsive","swal1","text","buttons","Ok","value","content","Yes","No","PODetails","loadPODetails","catch","err","error","swal","ApprovedTableBody","ApprovedTable","PONumber","OTPValidate","searchInputValid","POLoaded","OTPValid","RejectedItems","handleSearchInputChange","bind","IsValid","OTP","Math","floor","random","MakerEmail","localStorage","setItem","swalField","document","createElement","setAttribute","title","ResendOTP","Confirm","Text","reason","getItem","removeItem","event","target","name","POSearch","Card","Form","FormGroup","row","faSearch","Col","Input","type","placeholder","onChange","disabled","faSpinner","width","pathname","podetails","AttachmentUpload","attachmentdata","requestOptions","body","stringify","GetAllAttachments","refId","DeleteAttachment","path","FileUpload","UpdateAttachmentDetailsInView","RefID","uploadedFiles","handleAttachmentTable","selectedFiles","obj","UpdateStateInForm","handleFileCommit","ReactDOM","findDOMNode","refs","form","deleteAttachment","deletedItem","deleting","Path","selected","uploading","mode","AttachmentRefID","uuidv1","files","fileData","base64","UploadAttachment","r","attachmentTable","attachmentControl","uploadButton","rel","FileSize","colSpan","FileUploadHanler","Row","md","ref","multiple","onDone","getFiles","GetDigest","response","GetContextWebInformation","FormDigestValue","GetListItems","CreateListItem","digest","CommitAttachments","GetListItemByID","ID","NewRequest","createPOItemHandler","e","preventDefault","SelectedDepartment","Btn","GTDecimel","GrandTotal","replace","GTDecimel00","trunc","POData","POJSONData","j3xm","MakerName","zh3a","ozud","AttachmentReferenceNumber","AttachmentsReferenceNumber","yyrh","Num","Currency","CreatePO","CommitAttachmentToDB","redirectMyRequest","CommitAttachment","POItems","POAdditionalInfo","Departments","match","params","location","GetDepartments","departments","PO","v","DepartmentInput","AdditionalInfo","poItemsTDStyle","textAlign","thstyle","background","pobutton","FileUpload1","clearable","options","labelField","valueField","onDepartmentChange","SLNO","scope","Proj","Dept","Prod","WHse","ItemCode","Description","DelDate","code","quantity","UnitPrice","displayType","thousandSeparator","TotalPrice","SNo","Type","faBars","Label","for","defaultValue","CreatedDate","margin","bordered","rowSpan","GrandTotalWord","SupplierName","SupplierNumber","SupplierLocation","SupplierEmail","SupplierTel","SupplierAddress","Remark1","Remark2","pdftdStyle","marginLeft","GTStyle","padding","MyRequestTable","contex","itemViewFormatter","dependentValues","itemPDFViewFormatter","poPDFUrl","faFilePdf","SOitemPDFViewFormatter","DateFormatter","formatDate","GrandTotalFormatter","prefix","initColumnDefs","_columns","formatter","getRowMetaData","rowGetter","i","PODetailsTable","JsonData","columns","rowsCount","minHeight","isScrolling","sortColumn","Spinner","animation","variant","display","MyRequests","GetPODetails","GetPOItems","loaded","handleSearchInput","searchData","filterItems","items","resetSearch","filterRequestStatus","RequestStatusFilter","filterApprovalStatus","ApprovalStatusFilter","filterDepartment","DepartmentFilter","filterPOMaker","POMakerFilter","requestData","result","Promise","resolve","departmentSelect","POMakerSelect","RequestDetails","filter","RequestStatus","ApprovalStatus","distinctDepartments","Set","x","distinctPOMaker","minWidth","maxWidth","MyTasksTable","CheckPriority","TaskDetails","TaskDetailsTable","MyTasks","GetTaskDetails","GetCurrentUserid","u","GetTasks","AssignedToId","Data","DataValue","CurrentStatus","getElementById","filterStatus","Home","viewform","redirecturl","PMRequest","DMReuest","PM10DaysRequest","fromDate","TODate","DM10DaysRequest","ApprovalInBetween","TotalCountInBetween","RejectedInBetween","GM10DaysRequest","GMRequest","ApprovedRequest","RejectedRequest","TotalReuest","dateNow","Date","year","getFullYear","monthWithOffset","getUTCMonth","month","toString","date","getUTCDate","Dashboard","Dash","TotalRequest","Total","PMPending","DMRequest","DMPending","GMPending","Approved","Rejected","getdata","PeriodData","PMInBetweenRequest","DMInBetweenRequest","GMInBetweenRequest","RequestDuration","tableContainer","tableContainer2","parentcontainer","TextField","fromDate01","TODate01","start","end","labels","datasets","label","backgroundColor","hoverBackgroundColor","legend","position","React","GetPOData","Cuurency","GT2","TicketNumber","RespondedDate","POMaker","Department","RequestedDate","PendingWith","GetPODataInBetween","FilterComponent","columnDef","onFilterChanged","tableData","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","ExportPORequest","undefined","Table","icons","field","filterComponent","exportButton","pageSize","isLoading","exportAllData","MyCompletedTasks","getuserid","AssignedToId0","Container","fluid","exact","component","Content","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","render","URL","process","origin","addEventListener","status","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.42be699f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alrashid-logo.b498335f.png\";","const GetTaskListItems = async (listname,CurrentUserID) => {\r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$filter=TaskOutcome eq null and AssignedTo eq '${CurrentUserID}'`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    //console.log(data.d.results);\r\n    return data.d.results;\r\n }\r\nexport default GetTaskListItems;","const GetCompletedTask = async (listname,CurrentUserID) => {\r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$filter=TaskOutcome ne null and AssignedTo eq '${CurrentUserID}'`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    console.log(data.d.results.length);\r\n    return data.d.results;\r\n }\r\nexport default GetCompletedTask;","const GetCurrentLoginUserID = async () => {\r\n    const resp = await fetch(`/sites/apps/pmo/_api/web/CurrentUser`, {\r\n        method:'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    console.log(\"Current logged in user\",data.d.Id);\r\n    return data.d.Id;\r\n }\r\nexport default GetCurrentLoginUserID;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faListUl } from '@fortawesome/free-solid-svg-icons';\r\nimport { NavItem, NavLink, Nav } from 'reactstrap';\r\nimport classNames from 'classnames';\r\nimport {Link} from 'react-router-dom';\r\nimport React, { Component } from 'react'\r\nimport GetTasks from '../../Services/SharePoint/GetTaskListitem'\r\nimport GetCompletedTask from '../../Services/SharePoint/GetCompletedTask'\r\nimport GetCurrentUserid from '../../Services/SharePoint/GetCurrentLoinUserID'\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';  \r\nimport './sidebar.css';\r\n\r\nlet Count;\r\nexport default class SideBar extends Component {\r\n  constructor(props) {\r\n  super(props)\r\n  this.state = {\r\n    load:false\r\n  }\r\n}\r\n  componentDidMount() {\r\n    \r\n  }\r\n  \r\nrender() {\r\n\r\n    return (\r\n  <div id=\"ToggleNav\" className={classNames('sidebar', {'is-open': this.props.isOpen})}>\r\n        <div className=\"sidebar-header\">\r\n          <span color=\"info\" onClick={this.props.toggle} style={{color: '#fff'}}>&times;</span>\r\n          <h5>Purchase Order App</h5>\r\n        </div>\r\n        <div className=\"side-menu\">\r\n          <Nav vertical className=\"list-unstyled pb-3\">\r\n            {/* <p>PO Application</p> */}\r\n            \r\n            <NavItem>\r\n              <NavLink tag={Link} to={'/po-search'} >\r\n                <FontAwesomeIcon icon={faListUl} className=\"mr-2\"/>New Request\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to={'/pages/my-requests'}>\r\n                <FontAwesomeIcon icon={faListUl} className=\"mr-2\"/>PO Requests\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to={'/pages/my-tasks'}>\r\n                <FontAwesomeIcon icon={faListUl} className=\"mr-2\"/>Pending Tasks\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to={'/pages/my-completed'}>\r\n                <FontAwesomeIcon icon={faListUl} className=\"mr-2\"/>Completed Tasks\r\n              </NavLink>\r\n            </NavItem>\r\n            \r\n            <NavItem>\r\n              <NavLink tag={Link} to={'/pages/Dashboard'}>\r\n                <FontAwesomeIcon icon={faListUl} className=\"mr-2\"/>Dashboard\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to={'/pages/ExportPO'}>\r\n                <FontAwesomeIcon icon={faListUl} className=\"mr-2\"/>Export PO\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>        \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","const GetCurrentLoginUser = async () => {\r\n    const resp = await fetch(`/sites/apps/pmo/_api/web/CurrentUser`, {\r\n        method:'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    console.log(\"Current logged in user\",data.d);\r\n    return data.d;\r\n }\r\nexport default GetCurrentLoginUser;","import React, { useState , useEffect} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAlignLeft,faUser,faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Navbar, Button, NavbarToggler, Collapse, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport logo from '../../alrashid-logo.png'\r\nimport GetCurrentUser from '../../Services/SharePoint/GetCurrentLoginUser'\r\n\r\nexport default props => {\r\n  const [isOpen, setOpen] = useState(false)\r\n  const [CurrentUser, setCurrentLoginUser] = useState(\"\")\r\n  // const [isNotificationOpen, setNotificationOpen] = useState(false)\r\n  const toggle = () => setOpen(!isOpen)\r\n  // const toggleNotification = () => {\r\n  //  alert();\r\n  //  setNotificationOpen(!isNotificationOpen)\r\n  // }\r\n  useEffect(() => {\r\n    GetCurrentUser()\r\n    .then(d =>setCurrentLoginUser(`Welcome, ${d.Title}`))\r\n  },[]);\r\n\r\n    const welcomeStyle = {fontWeight:'500'}\r\n    const BellNotificationStyle = {color:\"rgb(35,86,151)\",fontSize:\"22px\",marginTop:\"-4px\"}\r\n  return (\r\n   <>\r\n    <Navbar color=\"light\" light className=\"navbar shadow-lg p-3 mb-3 bg-white rounded\" expand=\"md\">\r\n      <Button color=\"secondary\"className=\"btn-toggle-nav\" onClick={props.toggle}>\r\n        <FontAwesomeIcon icon={faAlignLeft}/>\r\n      </Button>\r\n      <NavbarToggler className=\"nav-toggler\" onClick={toggle} />\r\n      <img className=\"logo\" src=\"https://alrashidabetong.sharepoint.com/sites/apps/PMO/SiteAssets/PO_App/alrashid-logo.b498335f.png\" alt=\"AL RASHID ABETONG LOGO\"></img>\r\n      <Collapse isOpen={isOpen} navbar>\r\n      \r\n        <Nav className=\"ml-auto\" navbar>        \r\n        <NavItem>\r\n            <NavLink style={BellNotificationStyle} >\r\n           {/* <NotificationFeed></NotificationFeed>          */}\r\n            </NavLink>\r\n          </NavItem>\r\n          {/* <NavItem>\r\n            <NavLink tag={Link} to={'/'}>\r\n            <FontAwesomeIcon icon={faHome} className=\"mr-2\"/>\r\n              Home</NavLink>\r\n          </NavItem> */}\r\n          \r\n          <NavItem>\r\n          <NavLink style={welcomeStyle}>\r\n          <FontAwesomeIcon icon={faUser} className=\"mr-2\"/>\r\n            {CurrentUser}</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n          <NavLink style={welcomeStyle} href=\"https://alrashidabetong.sharepoint.com/sites/apps/PMO/_layouts/15/SignOut.aspx\">\r\n          <FontAwesomeIcon icon={faSignOutAlt} className=\"mr-2\"/>Sign Out\r\n          </NavLink>\r\n          </NavItem>\r\n      </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n\r\n       \r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n","\r\nconst GetPODetailsbyNumber = async (ponumber) => {\r\n    const resp = await fetch(`https://po-webapi.alrashidabetong.com/api/PODetails?PONumber=${ponumber}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const response = await resp;\r\n    //console.log(\"response\", response)\r\n    if (response.ok){\r\n        const data = await resp.json();\r\n        return JSON.parse(data);\r\n    }else{\r\n      alert(\"Purchase Order Fetching API is not working. Please check with your IT Support.\");\r\n    }\r\n    \r\n }\r\nexport default GetPODetailsbyNumber;","const GetListItemByPONumber = async (listname, ponumber) => {\r\n const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$select=ID,chff,POStatus,vwno,Created,POVersion&$orderby=ID desc&$filter=chff eq ${ponumber}`, \r\n {\r\n     headers: {\r\n         'Content-Type': 'application/json',\r\n         \"Accept\": \"application/json; odata=verbose\"\r\n     },\r\n });\r\n const data = await resp.json();\r\n console.log(\"Data from list\",data.d);\r\n return data.d.results;\r\n}\r\n\r\nexport default GetListItemByPONumber;","const SendOTP = async (recipient,ponumber, otp) => {\r\n    const resp = await fetch(`https://po-webapi.alrashidabetong.com/api/PODetails?recepient=${recipient}&PONumber=${ponumber}&OTP=${otp}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    console.log(\"Email Send Status\",data);\r\n    //console.log(\"Length of data from SQL\",data == null);\r\n    return data;\r\n    \r\n }\r\nexport default SendOTP;","import React, { Component } from 'react'\r\nimport { Col,Card, Form, FormGroup, Input, Button, Table } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  faSearch, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport './NewRequest.css'\r\nimport swal from 'sweetalert'\r\nimport swal1 from '@sweetalert/with-react';\r\nimport Moment from 'react-moment'\r\nimport  { Redirect } from 'react-router-dom' \r\nimport GetPODetailsbyNumber from '../../Services/GetPODetails/GetPODetailsbyNumber'\r\nimport GetListItemByPONumber from '../../Services/SharePoint/GetListItemByPONumber'\r\nimport SendOTP from '../../Services/GetPODetails/SendOTP'\r\n\r\nconst POTablePopup = {fontSize:\"12px\"}\r\n\r\nexport default class NewPOSearch extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchInput:null,\r\n            searchInputValid:true,\r\n            POLoading:false,\r\n            POLoaded:false,\r\n            OTPValid:false,\r\n            PODetails:{},\r\n            RejectedItems:{}         \r\n        }       \r\n        this.handleSearchInputChange = this.handleSearchInputChange.bind(this);\r\n    }\r\n\r\n    SearchPO =()=>{\r\n        if(this.validateSearchInput()){\r\n            this.setState({\r\n                POLoading:true\r\n            },this.validateExistingPO(this.state.searchInput))\r\n\r\n        }        \r\n    }\r\n\r\n    validateExistingPO = (POInput) =>{\r\n     GetListItemByPONumber(\"PMO\",POInput)\r\n     .then(d =>{\r\n      \r\n      \r\n        if(d.length > 0){\r\n             let InProgressPO = [];\r\n             let ApprovedPO = [];\r\n             let RejectedPO = [];\r\n             for(let item of d) {\r\n               if (item.POStatus !== null){\r\n                 if(item.POStatus.indexOf(\"InProgress\") > -1) {\r\n                    InProgressPO.push(item);\r\n                 }\r\n                 if(item.POStatus.indexOf(\"Approved\") > -1){\r\n                    ApprovedPO.push(item)\r\n                 }\r\n                 if(item.POStatus.indexOf(\"Rejected\") > -1){\r\n                  RejectedPO.push(item);\r\n               }\r\n               }\r\n             }             \r\n             if(InProgressPO.length > 0){\r\n              const InprogressBody = InProgressPO.map((item,index) =>\r\n               <tr key={index}>\r\n                  <td>{item.vwno}</td>\r\n                  <td>{item.chff}</td>\r\n                  <td>{item.POVersion}</td>\r\n                  <td>{item.POStatus}</td>\r\n                  <td><Moment format=\"DD-MM-YY hh:mm\">{item.Created}</Moment></td>\r\n              </tr>\r\n              )\r\n              const InprogressTable = <Table striped size=\"sm\" responsive style={POTablePopup}>\r\n               <thead>\r\n                <tr>\r\n                 <th>Ticket Number</th>\r\n                 <th>PO Number</th>\r\n                 <th>Revision</th>\r\n                 <th>Request Status</th>\r\n                 <th>Created Date</th>\r\n                 </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {InprogressBody}\r\n               </tbody>\r\n              </Table>\r\n              swal1({\r\n               text: \"Below PO Requests are already in Progress. You cannot Submit another request Now\",\r\n               buttons: {\r\n                 Ok:{\r\n                  text:\"Ok\",\r\n                  value:\"Ok\"\r\n                 }\r\n               },\r\n               content: (\r\n                 <div>\r\n                   {InprogressTable}\r\n                 </div>\r\n               )\r\n             }).then((value)=>{\r\n                 if (value === \"Ok\"){\r\n                   this.setState({                    \r\n                      POLoading:false                   \r\n                   })\r\n                 }\r\n             })\r\n             }\r\n             if(RejectedPO.length > 0){\r\n              const ApprovedTableBody = ApprovedPO.map((item,index) =>\r\n              <tr key={index}>\r\n                 <td>{item.vwno}</td>\r\n                 <td>{item.chff}</td>\r\n                 <td>{item.POVersion}</td>\r\n                 <td>{item.POStatus}</td>\r\n                 <td><Moment format=\"DD-MM-YY hh:mm\">{item.Created}</Moment></td>\r\n                 \r\n             </tr>\r\n             \r\n             )\r\n             \r\n             swal1({\r\n              text: \"Request has been rejected before, Do you want to continue?\",\r\n              buttons: {\r\n                Yes: {\r\n                 text:\"Yes\",\r\n                 value:\"Yes\"\r\n                },No:{\r\n                 text:\"No\",\r\n                 value:\"No\"\r\n                } \r\n              },\r\n             \r\n            })\r\n            .then((value) => {\r\n             switch (value) {       \r\n               case \"Yes\":\r\n                 GetPODetailsbyNumber(this.state.searchInput)\r\n                 .then(PODetails => \r\n                     this.loadPODetails(PODetails)\r\n                 )\r\n                 .catch(err=>\r\n                  console.error(\"API Error\",err)\r\n                 )\r\n                 \r\n                 break;        \r\n               case \"No\":\r\n                 this.setState({                    \r\n                  POLoading:false                   \r\n                 })\r\n                 break;\r\n               default:\r\n                 swal(\"Something is wrong!!\");\r\n             }\r\n            })\r\n               \r\n             }\r\n             if(ApprovedPO.length > 0 && InProgressPO.length < 1){\r\n              \r\n              const ApprovedTableBody = ApprovedPO.map((item,index) =>\r\n              <tr key={index}>\r\n                 <td>{item.vwno}</td>\r\n                 <td>{item.chff}</td>\r\n                 <td>{item.POVersion}</td>\r\n                 <td>{item.POStatus}</td>\r\n                 <td><Moment format=\"DD-MM-YY hh:mm\">{item.Created}</Moment></td>\r\n             </tr>\r\n             )\r\n             const ApprovedTable = <Table striped size=\"sm\" responsive style={POTablePopup}>\r\n              <thead>\r\n               <tr>\r\n                <th>Ticket Number</th>\r\n                <th>PO Number</th>\r\n                <th>Revision</th>\r\n                <th>Request Status</th>\r\n                <th>Created Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                 {ApprovedTableBody}\r\n              </tbody>\r\n             </Table>\r\n             swal1({\r\n              text: \"Below PO Requests are already Approved. Do you want to re-process?\",\r\n              buttons: {\r\n                Yes: {\r\n                 text:\"Yes\",\r\n                 value:\"Yes\"\r\n                },No:{\r\n                 text:\"No\",\r\n                 value:\"No\"\r\n                } \r\n              },\r\n              content: (\r\n                <div>\r\n                  {ApprovedTable}\r\n                </div>\r\n              )\r\n            })\r\n            .then((value) => {\r\n             switch (value) {       \r\n               case \"Yes\":\r\n                 GetPODetailsbyNumber(this.state.searchInput)\r\n                 .then(PODetails => \r\n                     this.loadPODetails(PODetails)\r\n                 )\r\n                 break;        \r\n               case \"No\":\r\n                 this.setState({                    \r\n                  POLoading:false                   \r\n                 })\r\n                 break;\r\n               default:\r\n                 swal(\"Something is wrong!!\");\r\n             }\r\n          })\r\n\r\n         }\r\n\r\n         //console.log(\"IN Progress\", InProgressPO)\r\n         //console.log(\"Approved\", ApprovedPO)\r\n        } else {\r\n             GetPODetailsbyNumber(this.state.searchInput)\r\n             .then(PODetails => \r\n                 this.loadPODetails(PODetails)\r\n             )\r\n        }\r\n     })\r\n\r\n    }\r\n    \r\n    loadPODetails = async (PODetails) => {\r\n        if(PODetails.PONumber == null){\r\n            swal(\"There is no record with this PO Number\");\r\n            this.setState({                    \r\n                POLoading:false                   \r\n            }) \r\n        }else {\r\n            this.setState({\r\n                PODetails:PODetails,\r\n                POLoading:false                                \r\n            }, this.OTPValidate)\r\n        }\r\n    }\r\n\r\n    validateSearchInput(){\r\n        let IsValid = true;\r\n        if ( this.state.searchInput === null) {  \r\n            IsValid = false;\r\n            swal(\"Search Input is empty\");             \r\n        }\r\n        return IsValid;\r\n    }\r\n   \r\n    OTPValidate(){\r\n        const OTP = Math.floor(100000 + Math.random() * 900000);\r\n            console.log(OTP,this.state ); \r\n            SendOTP(this.state.PODetails.MakerEmail,this.state.PODetails.PONumber,OTP);\r\n            localStorage.setItem('OTP',OTP);\r\n            var swalField = document.createElement('input');\r\n            swalField.setAttribute(\"placeholder\", \"6 Digit Code\");\r\n            swalField.setAttribute(\"ID\", \"OTP\");\r\n            swal( {\r\n               title:\"Enter OTP\",\r\n               text:\"Enter the OTP sent to your email:\",\r\n\r\n               icon:\"info\",\r\n               buttons:{\r\n                ResendOTP:{\r\n                  \r\n                },\r\n                 Confirm:{\r\n                   Text:\"Confirm\",\r\n                 }\r\n              },\r\n              content: swalField,\r\n         })\r\n             \r\n             .then((value) => {\r\n              let reason = swalField.value;\r\n              console.log(reason);\r\n              switch (value) {  \r\n              case \"Confirm\":\r\n               if (reason === \"\" || reason !== localStorage.getItem('OTP')){               \r\n                   swal(\"You have entered invalid or empty OTP\");\r\n               }else if(reason === localStorage.getItem('OTP')){\r\n                swal(\"You are sucessfully validated\")  \r\n                .then(this.setState({\r\n                        OTPValid: true,\r\n                        POLoading:false,\r\n                        POLoaded:true \r\n                     }))                   \r\n               }\r\n               break;\r\n               case \"ResendOTP\":\r\n                localStorage.removeItem('OTP');\r\n                this.OTPValidate()\r\n                break;\r\n              }\r\n               \r\n             });\r\n             \r\n             \r\n            \r\n    }\r\n    \r\n\r\n    \r\n    handleSearchInputChange(event) {\r\n         const target = event.target;\r\n         const value = target.value;\r\n         const name = target.name;    \r\n         this.setState({[name]:value})\r\n    }\r\n    \r\n\r\n    render() {\r\n        const {POLoading} = this.state;\r\n        const parentcontainer = {width:\"100%\"};\r\n        let POSearch = null;\r\n        if (this.state.POLoaded === false)\r\n        POSearch = <Card className=\"\">\r\n        <Form>\r\n                <FormGroup row className=\"form-header-container\"> \r\n                    <FontAwesomeIcon icon={faSearch} className=\"mr-2\"/>\r\n                    <h5 className=\"form-header\">Search by PO Number</h5>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Col className=\"search-input-col text-center\">\r\n                        \r\n                        <Input type=\"number\" name=\"searchInput\" className=\"POSearchInput\" placeholder=\"Enter PO Number to search\" onChange={this.handleSearchInputChange}/> \r\n                        {/* <FontAwesomeIcon icon={faSearch} className=\"mr-2\"/> */}\r\n                        <Button type=\"button\" color=\"success\" className=\"btn-po-search mt-2\" onClick={this.SearchPO} disabled={POLoading}>\r\n                        {POLoading ? <FontAwesomeIcon icon={faSpinner} className=\"mr-2\"/> : null}    \r\n                        Search\r\n                        </Button>                                                     \r\n                    </Col>\r\n                </FormGroup>                        \r\n        </Form>\r\n      </Card>;\r\n        console.log(\"PO Detals in state is\", this.state);\r\n        return (\r\n            <div style={parentcontainer}>\r\n                {POSearch}\r\n                {/* {this.state.POLoaded ? <NewRequest mode={this.props.match.params.mode} podetails={this.state.PODetails}/> :null} */}\r\n                \r\n                {this.state.POLoaded ?<Redirect to={\r\n                    {pathname: \"/po-request/new\",\r\n                    state: {podetails:this.state.PODetails}\r\n                    }}/>:null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nconst AttachmentUpload = async (attachmentdata) => {\r\n const requestOptions = {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept':'application/json; odata=verbose',\r\n  },\r\n  body: JSON.stringify(attachmentdata)\r\n}\r\n const resp = await fetch(`https://po-webapi.alrashidabetong.com/api/attachment/Upload`, requestOptions);\r\n const data = await resp.json();\r\n console.log(\"Attachment Upload Response API\",data);\r\n return data;\r\n \r\n}\r\nexport default AttachmentUpload;","const GetAllAttachments = async (refId) => {\r\n const resp = await fetch(`https://po-webapi.alrashidabetong.com/api/Attachment/GetAttach?refId=${refId}`, {\r\n     headers: {\r\n         'Content-Type': 'application/json',\r\n         \"Accept\": \"application/json; odata=verbose\"\r\n     },\r\n });\r\n const data = await resp.json();\r\n //console.log(\"Attachment Commit Status\",data);\r\n return data;\r\n \r\n}\r\nexport default GetAllAttachments;","const DeleteAttachment = async (refId,title,path) => {\r\n const resp = await fetch(`https://po-webapi.alrashidabetong.com/api/Attachment/deletefile?refId=${refId}&title=${title}&path=${path}`, {\r\n     method:'DELETE',\r\n     headers: {\r\n         'Content-Type': 'application/json',\r\n         \"Accept\": \"application/json; odata=verbose\"\r\n     },\r\n });\r\n const data = await resp.json();\r\n console.log(\"Attachment DELETION Status\",data);\r\n //console.log(\"Length of data from SQL\",data == null);\r\n return data;\r\n \r\n}\r\nexport default DeleteAttachment;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport {Row, Col, Button, Table } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faSpinner } from '@fortawesome/free-solid-svg-icons'\r\nimport FileBase64 from 'react-file-base64';\r\nimport { v1 as uuidv1 } from 'uuid';\r\nimport UploadAttachment from '../../../Services/AttachmentUpload/AttchmentUpload'\r\nimport GetAllAttachments from '../../../Services/AttachmentUpload/GetAllAttachments'\r\nimport DeleteAttachment from '../../../Services/AttachmentUpload/DeleteAttachment'\r\nimport './FileUpload.css'\r\n\r\nclass FileUpload extends Component {\r\n constructor(props) {\r\n  super(props);\r\n  this.state = {\r\n   selectedFiles: null,\r\n   selected:false,\r\n   RefID:null,\r\n   uploadedFiles:[],\r\n   uploading:false,\r\n   deleting:false\r\n   }\r\n }\r\n\r\n componentDidMount(){\r\n  \r\n  if(this.props.mode === 'view'){\r\n   console.log(\"RefID View Mode\", this.props.AttachmentRefID)\r\n   this.setState({RefID:this.props.AttachmentRefID},this.UpdateAttachmentDetailsInView)\r\n  }else{\r\n     const RefID = uuidv1();\r\n     this.setState({RefID:RefID});\r\n  }\r\n }\r\n\r\n UpdateAttachmentDetailsInView = ()=>{\r\n    GetAllAttachments(this.state.RefID)\r\n    .then(d => {\r\n       console.log(\"All Attachments in View Mode\",JSON.parse(d));\r\n       // const uploadedFiles = [...this.state.uploadedFiles];\r\n       // uploadedFiles.push(JSON.parse(d));\r\n       this.setState({\r\n        uploadedFiles:JSON.parse(d)\r\n       })\r\n    })\r\n }\r\n\r\ngetFiles(files){ \r\n this.setState({ selectedFiles: files,selected:true })\r\n}\r\n\r\nhandleAttachmentTable = () =>{\r\n    const path = `C:\\\\POAttachments\\\\${this.state.RefID}\\\\Attachments\\\\${this.state.selectedFiles.name}`;\r\n    const title = this.state.selectedFiles.name;\r\n    const size = this.state.selectedFiles.size;\r\n    const obj = {\"Title\":title,\"Path\":path,\"FileSize\":size};\r\n    const uploadedFiles = [...this.state.uploadedFiles];\r\n    uploadedFiles.push(obj);\r\n    this.setState({uploadedFiles:uploadedFiles}, this.UpdateStateInForm)\r\n    \r\n}\r\n\r\nFileUploadHanler(){\r\n ReactDOM.findDOMNode(this.refs.form).disabled = true;\r\n const fileData = {\"Filebase\":this.state.selectedFiles.base64,\r\n                   \"Title\": this.state.selectedFiles.name,\r\n                   \"RefID\":this.state.RefID,\r\n                   \"ApplicationName\":\"POApprovalApp\",\r\n                   \"AttachmentType\":\"attachment\",\r\n                   \"uploadStatus\":\"draft\"\r\n                  };\r\nthis.setState({uploading:true})                 \r\n UploadAttachment(fileData)\r\n .then(r => this.setState({uploading:false,selected:false},this.handleAttachmentTable)\r\n )\r\n ReactDOM.findDOMNode(this.refs.form).value = \"\";\r\n}\r\n\r\nUpdateStateInForm = ()=>{\r\n this.props.handleFileCommit(this.state.RefID);\r\n ReactDOM.findDOMNode(this.refs.form).disabled = false;\r\n}\r\n\r\ndeleteAttachment = (deletedItem)=>{\r\n //console.log(\"delete event\",deletedItem);\r\n this.setState({deleting:true})\r\n DeleteAttachment(this.state.RefID, deletedItem.Title, deletedItem.Path)\r\n .then(this.setState({deleting:false},this.UpdateAttachmentDetailsInView) )\r\n}\r\n\r\n render() {\r\n  console.log(\"Delete State\", this.state)\r\n  console.log(\"File Reference\", this.state.RefID)\r\n  console.log(\"Uploaded Files\",this.state.uploadedFiles);\r\n  console.log(\"FileUpload Property Passed\", this.props);\r\n\r\n \r\n\r\n  let attachmentTable;\r\n  let attachmentControl\r\n  let uploadButton;\r\n  if (this.state.uploadedFiles.length > 0){\r\n   attachmentTable= this.state.uploadedFiles.map((item,index) =>\r\n        <tr key={index}>\r\n        <td><a className=\"attachment-link\" rel=\"noopener noreferrer\" \r\n        href={`https://po-webapi.alrashidabetong.com/api/Attachment/Getfile?title=${item.Title}&path=${item.Path}`} target=\"_blank\">{item.Title}</a></td>\r\n        <td>{item.FileSize}</td>\r\n       {(this.props.mode === 'new') ?  <td className=\"attachment-delete\">\r\n        {(!this.state.deleting) ?<Button type=\"button\" \r\n        onClick={() => this.deleteAttachment(item)} className=\"btn btn-danger attach-del-btn\">Delete</Button>\r\n        : <FontAwesomeIcon icon={faSpinner}></FontAwesomeIcon>}\r\n        </td>:<td></td>}\r\n      </tr>\r\n       );\r\n  }else{\r\n   attachmentTable = <tr className=\"text-center\"><td colSpan=\"3\">No Attachment Added</td></tr>\r\n  }\r\n\r\n  if(this.state.uploading){\r\n   uploadButton = <div><FontAwesomeIcon icon={faSpinner} className=\"mt-4 mr-4  file-upload-btn\"/>\r\n   File Uploading</div>\r\n  }else{\r\n   uploadButton = <Button className=\"Primary file-upload-btn\" type=\"button\" \r\n   onClick={this.FileUploadHanler.bind(this)} disabled={!this.state.selected}>Upload</Button>\r\n  }\r\n\r\n  if(this.props.mode === 'new'){\r\n   attachmentControl =    <Row>\r\n   <Col md={12}><label className=\"AttachmentLabel\">Upload Supporting Documents </label></Col>\r\n    <Col md={6}>\r\n         <div className=\"files color\">                \r\n               {/* <Input type=\"file\" className=\"form-control\" multiple=\"false\" onChange={this.onChangeHandler}/>                 */}\r\n               <FileBase64 ref=\"form\" className=\"form-control\" multiple={ false }\r\n                onDone={this.getFiles.bind(this) } />\r\n         </div>\r\n    </Col>\r\n\r\n    <Col md={2} > \r\n       {uploadButton}\r\n    </Col>\r\n    \r\n  </Row>\r\n  }\r\n  return (\r\n   <>\r\n\r\n    {attachmentControl}\r\n   <Row>\r\n    <Col md={6}>\r\n    <Table striped className=\"mt-2\">\r\n      <thead>\r\n        <tr>\r\n          <th>Attachment Name</th>\r\n          <th>Size</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      {attachmentTable}\r\n      </tbody>\r\n   </Table>\r\n    </Col>\r\n   </Row>\r\n   </>\r\n  );\r\n }\r\n}\r\n\r\n\r\n\r\nexport default FileUpload;","const GetDigest = async () => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept':'application/json; odata=verbose',\r\n      }\r\n    }\r\n    const response = await fetch(`/sites/apps/PMO/_api/contextinfo`, requestOptions); \r\n    const data = await response.json();\r\n   // console.log(\"The context is\",data.d.GetContextWebInformation.FormDigestValue);\r\n    return data.d.GetContextWebInformation.FormDigestValue;\r\n  }\r\n\r\n  export default GetDigest;","const GetListItems = async (listname) => {\r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$top=10000&$orderby=ID desc')`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    //console.log(data.d.results);\r\n    return data.d.results;\r\n }\r\nexport default GetListItems;","const CreateListItem = async (listname, item,digest) => {\r\n    const requestOptions = {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept':'application/json; odata=verbose',\r\n            \"X-RequestDigest\":digest,\r\n            'credentials':'same-origin'\r\n          },\r\n          body: JSON.stringify(item)\r\n        }\r\n        console.log(requestOptions);\r\n        const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items`, requestOptions); \r\n        const data = await resp.json();\r\n        //console.log(\"The created employee is\",data);\r\n        return data.d;\r\n      }\r\nexport default CreateListItem;","const CommitAttachments = async (refId) => {\r\n const resp = await fetch(`https://po-webapi.alrashidabetong.com/api/Attachment/CommitAttachments?refId=${refId}`, {\r\n     headers: {\r\n         'Content-Type': 'application/json',\r\n         \"Accept\": \"application/json; odata=verbose\"\r\n     },\r\n });\r\n const data = await resp.json();\r\n console.log(\"Attachment Commit Status\",data);\r\n //console.log(\"Length of data from SQL\",data == null);\r\n return data;\r\n \r\n}\r\nexport default CommitAttachments;","const GetListItemByID = async (listname, ID) => {\r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items('${ID}')`, \r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    //console.log(\"ID\",data.d);\r\n    return data.d;\r\n }\r\n\r\nexport default GetListItemByID;","import React, { Component } from 'react'\r\nimport  { Redirect } from 'react-router-dom' \r\nimport {Row, Col,Card, Form, FormGroup, Label, Input, Button,Table } from 'reactstrap';\r\nimport NumberFormat from 'react-number-format';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport './NewRequest.css'\r\nimport Select from \"react-dropdown-select\";\r\nimport FileUpload from \"../content/FileUpload/FileUpload\"\r\nimport GetDigest from '../../Services/SharePoint/GetDigest'\r\nimport GetDepartments from '../../Services/SharePoint/GetListItems'\r\nimport CreatePO from '../../Services/SharePoint/CreateListItem'\r\nimport CommitAttachmentToDB from '../../Services/AttachmentUpload/CommitAttachments'\r\nimport GetListItemByID from '../../Services/SharePoint/GetListItemByID'\r\nimport swal from 'sweetalert';\r\nlet DisableSubmit;\r\nclass NewRequest extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            redirectMyRequest: false,\r\n            podetails: {\r\n                POItems:[],\r\n                POAdditionalInfo:[],\r\n            },\r\n            Departments:{},\r\n            SelectedDepartment:\"\",\r\n            AttachmentsReferenceNumber:null\r\n        }\r\n    }\r\n\r\n    componentDidMount (){\r\n        if (this.props.match.params.mode === 'new'){\r\n            this.setState({\r\n                podetails:this.props.location.state.podetails\r\n            })\r\n            GetDepartments('Department Managers').then(departments =>\r\n                {\r\n                    this.setState({\r\n                        Departments:departments              \r\n                    })\r\n                } );\r\n        }else if (this.props.match.params.mode === \"view\"){\r\n             GetListItemByID(\"PMO\",this.props.match.params.id)\r\n            .then(PO => \r\n                {\r\n                    //console.log(\"date returned\",PO) \r\n                this.setState({\r\n                    podetails:JSON.parse(PO.POJSONData),\r\n                    SelectedDepartment:PO.ozud,\r\n                    AttachmentsReferenceNumber:PO.AttachmentReferenceNumber\r\n                })}    \r\n            )           \r\n        }\r\n    }\r\n\r\n    createPOItemHandler = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.SelectedDepartment === \"\"){\r\n          swal(\"Deepartment Input is Empty!!\");\r\n        }else{\r\n            DisableSubmit = ()=>{\r\n            this.refs.Btn.setAttribute(\"disabled\", \"disabled\")\r\n            //console.log(\"disabled\");\r\n            //alert('Disabled');\r\n            }\r\n            let GrandTotalStr = JSON.stringify(this.state.podetails.GrandTotal)\r\n            let GTDecimel =GrandTotalStr.replace(/\"/g,\"\") \r\n            let GTDecimel00 = Math.trunc(GTDecimel)\r\n            let POData = {\r\n             Title: this.state.podetails.PONumber,\r\n             chff: this.state.podetails.PONumber,\r\n             POJSONData: JSON.stringify(this.state.podetails),\r\n             j3xm: this.state.podetails.MakerName,\r\n             zh3a: this.state.podetails.MakerEmail,\r\n             ozud: this.state.SelectedDepartment,\r\n             POVersion:JSON.stringify(this.state.podetails.POVersion),\r\n             AttachmentReferenceNumber:this.state.AttachmentsReferenceNumber,\r\n             yyrh: JSON.stringify(this.state.podetails.GrandTotal),\r\n             Num: GTDecimel00,\r\n             Currency:JSON.stringify(this.state.podetails.Currency)\r\n\r\n           };\r\n           GetDigest()\r\n            \r\n               .then(d => CreatePO('PMO', POData, d)\r\n               .then(CommitAttachmentToDB(this.state.AttachmentsReferenceNumber))\r\n               .then(\r\n                   this.setState({\r\n                       redirectMyRequest: true\r\n                   })\r\n               ));\r\n             }       \r\n    }\r\n\r\n    onDepartmentChange(v){\r\n        //console.log(\"onchange\",v[0].Title);\r\n              this.setState({\r\n                  SelectedDepartment:v[0].Title,\r\n              })\r\n    }\r\n\r\n    CommitAttachment = (RefID) => {\r\n     \r\n     this.setState({AttachmentsReferenceNumber:RefID});\r\n    }\r\n    \r\n        \r\n        \r\n       \r\n    render() {\r\n        console.log(\"State\", this.state)\r\n        if (this.state.redirectMyRequest === true) {\r\n            return <Redirect to='/pages/my-requests' />\r\n        }       \r\n        let headerStyle = {margin:0};\r\n        let poItemsTDStyle = {textAlign:\"right\"};\r\n        const thstyle = {background:\"#eeeeee\",fontWeight:\"bold\"};\r\n        let DepartmentInput;\r\n        let POItems;\r\n        let AdditionalInfo;\r\n        let pobutton = null;\r\n        let FileUpload1 = null;\r\n        if (this.props.match.params.mode === 'new'){\r\n            pobutton =  <>\r\n                     \r\n                     <FormGroup row>\r\n                       <Col md={12} className=\"text-right\">\r\n                            <Button className=\"mr-2 btn-cancel\"  color=\"primary\">Cancel</Button>\r\n                            <Button ref=\"Btn\" color=\"danger\" onClick={this.createPOItemHandler}>Submit</Button>\r\n                       </Col>                          \r\n                    </FormGroup></>\r\n\r\n             DepartmentInput = <Select className=\"po-input\" clearable options={this.state.Departments} labelField=\"Title\"\r\n              valueField=\"Title\"  onChange={(value) => this.onDepartmentChange(value)}/>       \r\n        }else if(this.props.match.params.mode === 'view'){\r\n            DepartmentInput =<Input className=\"po-input\" value={this.state.SelectedDepartment ||\"\"} \r\n             type=\"text\" name=\"\" id=\"initiatorDepartment\" disabled />                           \r\n        }\r\n        \r\n        if(this.state.podetails.POItems){\r\n            POItems =  this.state.podetails.POItems.map((item) => \r\n                            <tr key={item.SLNO}>\r\n                            <th scope=\"row\">{item.SLNO}</th>\r\n                            <td >{item.Proj}</td>\r\n                            <td>{item.Dept}</td>\r\n                            <td>{item.Prod}</td>\r\n                            <td>{item.WHse}</td>\r\n                            <td>{item.ItemCode}</td>\r\n                            <td>{item.Description}</td>\r\n                            <td>{item.DelDate}</td>\r\n                            <td style={poItemsTDStyle}>{item.code}</td>\r\n                            <td style={poItemsTDStyle}>{item.quantity}</td>\r\n                            <td style={poItemsTDStyle}><NumberFormat  value={item.UnitPrice || 0} displayType={'text'} thousandSeparator={true}/></td>\r\n                            <td style={poItemsTDStyle}><NumberFormat  value={item.TotalPrice || 0} displayType={'text'} thousandSeparator={true}/></td>                            \r\n                            </tr>   \r\n             );\r\n        }\r\n        console.log(\"Addtional Info\",this.state.podetails.POAdditionalInfo.length);\r\n        if(this.state.podetails.POAdditionalInfo){\r\n            AdditionalInfo = this.state.podetails.POAdditionalInfo.map((item,index)=>\r\n            <tr key={index}>\r\n                    <td >{item.SNo}</td>\r\n                    <td >{item.Type}</td>\r\n            </tr>\r\n            );\r\n        }\r\n        \r\n        if (this.state.podetails.POAdditionalInfo.length === 0){\r\n            AdditionalInfo = <tr>\r\n            <td colSpan=\"2\">No Addtional Info</td>\r\n            </tr>\r\n        }\r\n        \r\n        if(this.props.match.params.mode === 'new' || this.state.AttachmentsReferenceNumber !== null){\r\n         FileUpload1= <FileUpload mode={this.props.match.params.mode} \r\n         handleFileCommit={this.CommitAttachment} AttachmentRefID ={this.state.AttachmentsReferenceNumber}>                 \r\n         </FileUpload>\r\n        }\r\n        return (\r\n            <div className=\"form-container\">\r\n           <Card >\r\n           <Form>\r\n               <FormGroup row className=\"form-header-container\"> \r\n                    <FontAwesomeIcon icon={faBars} className=\"mr-2\"/>\r\n                    <h5 className=\"form-header\">Purchase Order Details</h5>\r\n               </FormGroup>              \r\n               <FormGroup row>\r\n                   \r\n                   <Col md={4}>\r\n                   <Label for=\"initiatorName\" >Maker Name</Label> \r\n                   <Input className=\"po-input\"  value={this.state.podetails.MakerName ||\"\"}\r\n                   type=\"text\" name=\"maker-name\" id=\"initiatorDepartment\" disabled />                      \r\n                   </Col>                                   \r\n                   <Col md={4}>\r\n                   <Label for=\"initiatorName\" >Maker Email</Label>    \r\n                   <Input className=\"po-input\" value={this.state.podetails.MakerEmail ||\"\"}     \r\n                    type=\"text\" name=\"email\" id=\"initiatorEmail\" disabled />\r\n                   </Col>\r\n                   <Col md={4}>\r\n                   <Label for=\"initiatorDepartment\" >Department</Label>    \r\n                            {DepartmentInput}\r\n                   </Col> \r\n                   \r\n               </FormGroup>\r\n\r\n               <FormGroup row>\r\n               \r\n                   <Col md={4}>\r\n                   <Label for=\"createdDate\" >Created Date</Label>   \r\n                   <Input className=\"po-input\" defaultValue={this.state.podetails.CreatedDate ||\"\"} \r\n                    type=\"text\" name=\"date\" id=\"createdDate\"/>                    \r\n                   </Col>\r\n                   \r\n                   <Col md={4}>\r\n                   <Label for=\"poNumber\" >PO Number</Label>    \r\n                   <Input className=\"po-input\" value={this.state.podetails.PONumber ||\"\"}\r\n                   type=\"text\" name=\"poNumber\" id=\"poNumber\" disabled/>                   \r\n                   </Col>\r\n                   <Col md={4} className=\"d-flex align-items-center\">                      \r\n                   </Col>               \r\n               </FormGroup>\r\n               <FormGroup row className=\"form-header-container\" style={headerStyle}> \r\n                    <FontAwesomeIcon icon={faBars} className=\"mr-2\"/>\r\n                    <h5  className=\"form-header\">Item Details</h5>\r\n               </FormGroup>\r\n               <div className=\"table-responsive-md\">\r\n                <Table bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\" rowSpan=\"2\" className=\"th-main align-middle text-center\">#</th>\r\n                                <th scope=\"col\" colSpan=\"4\" className=\"th-main align-middle text-center\">Dimension</th>\r\n                                <th scope=\"col\" rowSpan=\"2\" className=\"th-main align-middle text-center\">Item Code</th>\r\n                                <th scope=\"col\" rowSpan=\"2\" className=\"th-main align-middle text-center\">Description</th>\r\n                                <th scope=\"col\" rowSpan=\"2\" className=\"th-main align-middle text-center\">Del. Date</th>\r\n                                <th scope=\"col\" rowSpan=\"2\" className=\"th-main align-middle text-center\">Unit Code</th>\r\n                                <th scope=\"col\" rowSpan=\"2\" className=\"th-main align-middle text-center\">Quantity</th>\r\n                                <th scope=\"col\" rowSpan=\"2\" className=\"th-main align-middle text-center\">Unit Price</th>\r\n                                <th scope=\"col\" rowSpan=\"2\" className=\"th-main align-middle text-center\">Total price</th>\r\n                            </tr>\r\n                            <tr>\t\t\r\n                                <th  scope=\"col\" className=\"th-sub align-middle text-center\">Proj.</th>\r\n                                <th  scope=\"col\" className=\"th-sub align-middle text-center\">Dept</th>\r\n                                <th  scope=\"col\" className=\"th-sub align-middle text-center\">Prod</th>\r\n                                <th  scope=\"col\" className=\"th-sub align-middle text-center\">W.Hse</th>\r\n                             </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {POItems}                          \r\n                        </tbody>\r\n                        <tfoot>\r\n                         <tr>\r\n                          <th colSpan=\"2\">Grand Total ({this.state.podetails.Currency})</th>\r\n                          <th colSpan=\"9\" style={poItemsTDStyle}>{this.state.podetails.GrandTotalWord}</th>\r\n                          <th colSpan=\"1\" style={poItemsTDStyle}><NumberFormat  value={this.state.podetails.GrandTotal || 0} displayType={'text'} thousandSeparator={true}\r\n                           // prefix={`${this.state.podetails.Currency}`}\r\n                           /></th>\r\n                         </tr>\r\n                        </tfoot>\r\n                 </Table>\r\n                </div>\r\n\r\n                   <Row >\r\n                    <Col md={4}>\r\n                    <Table bordered size=\"sm\">\r\n                        <thead>\r\n                            <tr >\r\n                            <th colSpan=\"2\" style={thstyle}>Supplier Info</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                            <td>Supplier Name</td>\r\n                            <td>{this.state.podetails.SupplierName}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Supplier No</td>\r\n                                <td>{this.state.podetails.SupplierNumber}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Supplier Location</td>\r\n                                <td>{this.state.podetails.SupplierLocation}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Supplier Email</td>\r\n                                <td>{this.state.podetails.SupplierEmail}</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <td>Supplier Tel</td>\r\n                            <td>{this.state.podetails.SupplierTel}</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <td>Supplier Address</td>\r\n                            <td>{this.state.podetails.SupplierAddress}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <Table bordered>\r\n\r\n                    <tbody>\r\n                        <tr>\r\n                            <td colSpan=\"2\" style={thstyle}>Addtional Info</td>\r\n                        </tr>\r\n                        {AdditionalInfo}\r\n                    </tbody>\r\n                    </Table>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <Table bordered>\r\n\r\n                        <tbody>\r\n                            <tr>\r\n                                <td style={thstyle}>Remarks 1</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td >{this.state.podetails.Remark1}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={thstyle}>Remarks 2</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td >{this.state.podetails.Remark2}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    </Col>\r\n                   </Row>  \r\n                   \r\n                    {FileUpload1}\r\n                    {pobutton}\r\n                \r\n           </Form>\r\n       </Card>      \r\n       </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default NewRequest;","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row,Col,Card, Spinner } from 'reactstrap'\r\nimport ReactDataGrid from 'react-data-grid'\r\nimport Moment from 'react-moment'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faBars,faFilePdf } from '@fortawesome/free-solid-svg-icons'\r\nimport NumberFormat from 'react-number-format'\r\nimport ReactExport from \"react-data-export\";\r\n\r\n\r\n\r\nconst pdftdStyle = {color:\"red\",marginLeft:\"40%\",fontSize:\"20px\"}\r\nconst GTStyle = {padding: \"10%\"}\r\n\r\nexport default class MyRequestTable extends Component {\r\n    constructor(props, contex) {\r\n        super(props, contex);\r\n        this.initColumnDefs();\r\n        \r\n    }\r\n\r\n    formatDate(data) {\r\n        return <Moment format=\"MM/DD/YYYY hh:mm\">\r\n                {data}\r\n            </Moment>;\r\n      }\r\n\r\n    itemViewFormatter =(props) => {\r\n        return <Link className=\"table-anchor\" to={`/po-request/view/${props.dependentValues.Id}`}>POTN{props.value}</Link>    \r\n    };\r\n\r\n     itemPDFViewFormatter =(props) =>{\r\n         let poPDFUrl = \"\";\r\n         if(props.value === \"Approved\"){\r\n          poPDFUrl= <a  style={pdftdStyle} target=\"_blank\" rel=\"noopener noreferrer\"\r\n          href={`https://alrashidabetong.sharepoint.com/sites/apps/PMO/GeneratedPurchaseOrders/${props.dependentValues.chff}-${props.dependentValues.POVersion}.pdf`}>\r\n            <FontAwesomeIcon icon={faFilePdf} className=\"mr-2\"/>\r\n           </a>    \r\n         }\r\n         return poPDFUrl;\r\n     }\r\n     SOitemPDFViewFormatter =(props) =>{\r\n        let poPDFUrl = \"\";\r\n        if(props.value === \"Approved\"){\r\n         poPDFUrl= <a  style={pdftdStyle} target=\"_blank\" rel=\"noopener noreferrer\"\r\n         href={`https://alrashidabetong.sharepoint.com/sites/apps/PMO/SupplierPOReport/${props.dependentValues.chff}-${props.dependentValues.POVersion}.pdf`}>\r\n           <FontAwesomeIcon icon={faFilePdf} className=\"mr-2\"/>\r\n          </a>    \r\n        }\r\n        return poPDFUrl;\r\n    }\r\n    DateFormatter = props => (\r\n        <div className=\"text-center py-2\">\r\n            <span>{this.formatDate(props.value)}</span>\r\n        </div>\r\n    )\r\n    \r\n    GrandTotalFormatter = (props)=>{\r\n        return <NumberFormat style={GTStyle} value={props.value || 0} displayType={'text'} thousandSeparator={true} prefix={`${JSON.parse(props.dependentValues.POJSONData).Currency} `}/>\r\n    }\r\n\r\n    initColumnDefs = () => {\r\n        this._columns = [\r\n            {\r\n                key: 'Id',\r\n                name: 'Ticket Number',\r\n                formatter: this.itemViewFormatter,\r\n                getRowMetaData: (row) => row,\r\n                width:'5%',\r\n                Id: this.props.value\r\n            },\r\n            {\r\n                key: 'chff',\r\n                name: 'PO Number',\r\n                width:'5%'\r\n            },\r\n            {\r\n                key: 'j3xm',\r\n                name: 'PO Maker',\r\n                width:'5%'\r\n\r\n            },\r\n            {\r\n                key: 'ozud',\r\n                name: 'Department',\r\n                width:'5%'\r\n            },\r\n            {\r\n                key: 'yyrh',\r\n                name: 'Grand Total',\r\n                width:'10%',\r\n                textAlign:'right !important',\r\n                formatter: this.GrandTotalFormatter,\r\n                getRowMetaData: (row) => row,\r\n                \r\n            },\r\n            {\r\n                key: 'Created',\r\n                name: 'Requested Date',\r\n                width:'5%',\r\n                formatter: this.DateFormatter,\r\n                \r\n            },\r\n            {\r\n                key: 'RequestStatus',\r\n                name: 'Request Status',\r\n                width:'25%'  \r\n            },\r\n            {\r\n                key: 'ApprovalStatus',\r\n                name: 'Approval Status',\r\n                width:'25%'\r\n            },\r\n            {\r\n                key: 'RespondedDate',\r\n                name: 'Responded Date',\r\n                width:'25%'  \r\n            },\r\n            {\r\n                key: 'PendingWith',\r\n                name: 'Pending With',\r\n                width:'25%'  \r\n            },\r\n            {\r\n             key: 'POStatus',\r\n             name: 'IPOC',\r\n             formatter: this.itemPDFViewFormatter,\r\n             width:'1%'  ,\r\n             getRowMetaData: (row) => row\r\n         },\r\n         {\r\n            key: 'POStatus',\r\n            name: 'SPOC',\r\n            formatter: this.SOitemPDFViewFormatter,\r\n            width:'1%'  ,\r\n            getRowMetaData: (row) => row\r\n        }              \r\n        ];\r\n    };\r\n   \r\n    rowGetter = (i) => {\r\n        return this.props.PODetails[i];\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        const tableContainer = {width:\"100%\"};\r\n        const headerStyle = {display:\"flex\"};\r\n        let PODetailsTable;\r\n        let JsonData;\r\n        \r\n        if (this.props.PODetails) {\r\n            console.log(JsonData)\r\n            PODetailsTable = <ReactDataGrid\r\n            columns={this._columns}\r\n            rowGetter={this.rowGetter}\r\n            rowsCount={this.props.PODetails.length} \r\n             minHeight={1000} \r\n             isScrolling={false}\r\n             sortColumn={true}\r\n             width={100}\r\n             \r\n            />\r\n        }else{\r\n            PODetailsTable = <div className=\"text-center\">\r\n                <Spinner className=\"mr-3\" animation=\"border\" variant=\"secondary\" />\r\n                <span>Loading PO Details ...</span>\r\n                </div> ;\r\n        }\r\n\r\n        return (\r\n                <Card style={tableContainer}>\r\n                    <Row>\r\n                        <Col style={headerStyle} className=\"form-header-container\" md={12}>\r\n                            <FontAwesomeIcon icon={faBars} className=\"mr-2\"/>\r\n                            <h5 className=\"form-header\">Purchase Order Requests</h5>\r\n                        </Col>\r\n                        \r\n                        <Col md={12}>                                            \r\n                            {PODetailsTable}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    \r\n                </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row,Col,Card, FormGroup,Input,Label } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport GetPOItems from '../../Services/SharePoint/GetListItems'\r\nimport './NewRequest.css'\r\nimport MyRequestTable from './MyRequestTable'\r\n\r\nexport default class MyRequests extends Component {\r\n    constructor(props, contex) {\r\n        super(props, contex);\r\n        this.state = {\r\n            loaded:false,\r\n            PODetails: null,\r\n            PONumber:\"\",\r\n            RequestStatusFilter:\"All\",\r\n            DepartmentFilter:\"All\",\r\n            ApprovalStatusFilter:\"All\",\r\n            POMakerFilter:\"All\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n     this.GetPODetails();\r\n     //setInterval(this.GetPODetails, 1000);\r\n    }\r\n\r\n    GetPODetails = ()=>{\r\n        \r\n        GetPOItems('PMO').then(r => \r\n            this.setState({\r\n                PODetails:r,\r\n                loaded:true\r\n            })    \r\n        );\r\n        \r\n    }\r\n    \r\n    async filterItems(requestData) {\r\n\r\n        let result = [];\r\n        for(let item of this.state.PODetails) {\r\n          if(item.chff.indexOf(requestData.PONumber) > -1) {\r\n            result.push(item);\r\n          }\r\n        }\r\n        return Promise.resolve(result);\r\n      }\r\n\r\n    handleSearchInput=(event)=>{\r\n        this.setState({PONumber: event.target.value});\r\n    }\r\n\r\n    searchData =() => {\r\n        this.filterItems({ PONumber: this.state.PONumber}).then(items => {\r\n            this.setState({PODetails: items});\r\n        });\r\n    }\r\n\r\n    resetSearch = ()=>{\r\n        this.GetPODetails();\r\n    }\r\n\r\n    filterRequestStatus = (event)=>{\r\n        this.setState({\r\n            RequestStatusFilter:event.target.value\r\n        })  \r\n    }\r\n    filterApprovalStatus = (event)=>{\r\n        this.setState({\r\n            ApprovalStatusFilter:event.target.value\r\n        })  \r\n    }\r\n\r\n    filterDepartment = (event)=>{\r\n        this.setState({\r\n            DepartmentFilter:event.target.value\r\n        })  \r\n    }\r\n    filterPOMaker = (event)=>{\r\n        this.setState({\r\n            POMakerFilter:event.target.value\r\n        })  \r\n    }\r\n\r\n\r\n    render() {\r\n        //console.log(\"PO Details in grid\", this.state);\r\n        //console.log(\"PO Search Input\", this.state.PONumber);\r\n        const tableContainer = {width:\"100%\"};\r\n        const headerStyle = {display:\"flex\"};\r\n        const parentcontainer = {minWidth:\"100%\",maxWidth:\"100%\"};\r\n        let RequestDetails = this.state.PODetails;\r\n        if(this.state.RequestStatusFilter !== \"All\"){\r\n         RequestDetails = RequestDetails.filter(item => item.RequestStatus === this.state.RequestStatusFilter)\r\n        }\r\n       if(this.state.ApprovalStatusFilter !== \"All\"){\r\n        RequestDetails = RequestDetails.filter(item => item.ApprovalStatus === this.state.ApprovalStatusFilter)\r\n       }\r\n        if(this.state.DepartmentFilter !== \"All\"){\r\n            RequestDetails = RequestDetails.filter(item => item.ozud === this.state.DepartmentFilter)\r\n        }\r\n        if(this.state.POMakerFilter !== \"All\"){\r\n            RequestDetails = RequestDetails.filter(item => item.j3xm === this.state.POMakerFilter)\r\n        }\r\n        let departmentSelect;\r\n        if (this.state.PODetails){\r\n            const distinctDepartments = [...new Set(this.state.PODetails.map(x => x.ozud))]\r\n            //console.log(\"Dept\", distinctDepartments)\r\n            departmentSelect = <Input type=\"select\" name=\"select\" id=\"exampleSelect\" \r\n            onChange={this.filterDepartment}>\r\n                    <option defaultValue>All</option>\r\n                    {distinctDepartments.map((item,index) =>\r\n                    <option key={index}>{item}</option>                      \r\n                )};\r\n            </Input>\r\n        }\r\n        let POMakerSelect;\r\n        if (this.state.PODetails){\r\n            const distinctPOMaker = [...new Set(this.state.PODetails.map(x => x.j3xm))]\r\n            //console.log(\"Dept\", distinctDepartments)\r\n            POMakerSelect = <Input type=\"select\" name=\"select\" id=\"exampleSelect\" \r\n            onChange={this.filterPOMaker}>\r\n                    <option defaultValue>All</option>\r\n                    {distinctPOMaker.map((item,index) =>\r\n                    <option key={index}>{item}</option>                      \r\n                )};\r\n            </Input>\r\n        }\r\n        return (\r\n        <div style={parentcontainer}>    \r\n                <Card style={tableContainer} className=\"mb-3\">\r\n                <Row>\r\n                        <Col style={headerStyle} className=\"form-header-container\" md={12}>\r\n                            <FontAwesomeIcon icon={faSearch} className=\"mr-2\"/>\r\n                            <h5 className=\"form-header\">Filter Purchase Order Requests</h5>\r\n                        </Col>\r\n                </Row>\r\n                <form className=\"form-horizontal\">\r\n                        <FormGroup row>\r\n                        <div className=\"col-md-3\">\r\n                            <Label for=\"exampleSelect\" className=\"mt-2\">POMaker</Label>                          \r\n                                {POMakerSelect}\r\n                            </div>\r\n                            <div className=\"col-md-9\" id=\"legend\">\r\n                            <p  className=\"mt-2\"><span id=\"ShortF\" >PM:</span> Purchase Manager<span id=\"ShortF\">DM:</span> Department Manager<span id=\"ShortF\">GM:</span> General Manager</p>    \r\n                                                  \r\n                                \r\n                            </div>\r\n                        </FormGroup> \r\n                        </form>\r\n                <form className=\"form-horizontal\">\r\n                            <FormGroup row>\r\n                            <div className=\"col-md-3\"> \r\n                            <Label for=\"exampleSelect\" className=\"mt-2\">Request Status</Label>                         \r\n                                    <Input type=\"select\" name=\"select\" id=\"exampleSelect\" \r\n                                    onChange={this.filterRequestStatus}>\r\n                                            <option defaultValue>All</option>\r\n                                            <option>Not Started</option>\r\n                                            <option>In Progress</option>\r\n                                            <option>Completed</option>\r\n                                    </Input>\r\n                            </div> \r\n                            <div className=\"col-md-3\"> \r\n                            <Label for=\"exampleSelect\" className=\"mt-2\">Approval Status</Label>                         \r\n                                    <Input type=\"select\" name=\"select\" id=\"exampleSelect\" \r\n                                    onChange={this.filterApprovalStatus}>\r\n                                            <option defaultValue>All</option>\r\n                                            <option>PM-Approved</option>\r\n                                            <option>DM-Approved</option>\r\n                                            <option>GM-Approved</option>\r\n                                            <option>PM-Rejected</option>\r\n                                            <option>DM-Rejected</option>\r\n                                            <option>GM-Rejected</option>\r\n                                            \r\n                                    </Input>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                            <Label for=\"exampleSelect\" className=\"mt-2\">Department</Label>                          \r\n                                {departmentSelect}\r\n                            </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <Label for=\"exampleSelect\" className=\"mt-2\">Search PO</Label>\r\n                                    <div className=\"input-group-append\">\r\n                                    <Input type=\"text\" placeholder=\"Enter PO Number\" value={this.state.PONumber} onChange={this.handleSearchInput}/>\r\n                                    <button className=\"btn btn-sm btn-success mr-2 ml-2 btn-cancel\" onClick={this.searchData} type=\"button\">Search</button>\r\n                                    <button className=\"btn btn-sm btn-danger\" onClick={this.resetSearch} type=\"button\">Reset</button>\r\n                                    </div>                                   \r\n                                </div>                    \r\n                            </FormGroup>\r\n                        </form>    \r\n                            \r\n                </Card>\r\n                \r\n                <MyRequestTable PODetails={RequestDetails}></MyRequestTable>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row,Col,Card, Spinner } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  faBars, faBorderNone } from '@fortawesome/free-solid-svg-icons';\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport Moment from 'react-moment';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nexport default class MyTasksTable extends Component {\r\n    constructor(props, contex) {\r\n        super(props, contex);\r\n        this.initColumnDefs();\r\n    }\r\n\r\n    formatDate(data) {\r\n        return <Moment format=\"DD-MM-YYYY  hh:mm\">\r\n                {data}\r\n            </Moment>;\r\n      }\r\n     \r\n\r\n    itemViewFormatter =(props) => {\r\n        return <a className=\"table-anchor\" target=\"_self\"  rel=\"noopener noreferrer\" href={`/sites/apps/pmo/WorkflowTasks/EditForm.aspx?ID=${props.dependentValues.Id}`}>{props.value}</a>    \r\n    };\r\n    GrandTotalFormatter = (props)=>{\r\n        if(props.dependentValues.Currency === null){\r\n            return <NumberFormat style={{textAlign: 'right'}} value={props.value || 0} displayType={'text'} thousandSeparator={true} prefix={\"SAR\"}/>\r\n    \r\n        }\r\n        else{\r\n        return <NumberFormat style={{textAlign: 'right'}} value={props.value || 0} displayType={'text'} thousandSeparator={true} prefix={`${props.dependentValues.Currency} `}/>\r\n    \r\n    }}\r\n    DateFormatter = props => (\r\n        <div className=\"text-center py-2\">\r\n            <span>{this.formatDate(props.value)}</span>\r\n        </div>\r\n    )\r\n    CheckPriority = (props)=>{\r\n        if(props.value === \"High\"){\r\n        return (<div style={{background: 'rgba(220, 53, 69,0.7)', color: 'white',fontWeight:'bold',textAlign:'center'}}>{props.value}</div>)\r\n    }\r\n    else{\r\n        return (<div>{props.value}</div>)\r\n    }\r\n}\r\n    \r\n\r\n    initColumnDefs = () => {\r\n        this._columns = [\r\n            {\r\n                key: 'Id',\r\n                name: 'Task ID',\r\n                width:'5%'\r\n            },\r\n            {\r\n                key: 'PONumber',\r\n                name: 'PO Number',\r\n                width:'10%',\r\n                formatter: this.itemViewFormatter,\r\n                getRowMetaData: (row) => row\r\n            },\r\n            {\r\n                key: 'InitiatorName',\r\n                name: 'Initiator Name',\r\n                width:'15%'\r\n            },\r\n            {\r\n                key: 'Department',\r\n                name: 'Department',\r\n                width:'15%'\r\n            },   \r\n            {\r\n                key: 'Created',\r\n                name: 'Assigned Date',\r\n                width:'15%',\r\n                formatter: this.DateFormatter    \r\n            },\r\n            {\r\n                key: 'DueDate',\r\n                name: 'Due Date',\r\n                width:'15%',\r\n                formatter: this.DateFormatter    \r\n            },\r\n            {\r\n                key: 'GrandTotal',\r\n                name: 'Grand Total',\r\n                width:'10%',\r\n                formatter: this.GrandTotalFormatter,\r\n                getRowMetaData: (row) => row\r\n            },\r\n            {\r\n                key: 'Status',\r\n                name: 'Status',\r\n                width:'15%'\r\n            },\r\n            {\r\n                key: 'ReviwalStatus',\r\n                name: 'Reviewal Status',\r\n                width:'15%'\r\n            },\r\n            {\r\n                key: 'RespondedDate',\r\n                name: 'RespondedDate',\r\n                width:'15%'\r\n            },\r\n            {\r\n                key: 'POPriority',\r\n                name: 'Priority',\r\n                width:'15%',\r\n                formatter: this.CheckPriority,\r\n                getRowMetaData: (row) => row,\r\n                \r\n            }            \r\n            \r\n        ];\r\n    };\r\n    \r\n    rowGetter = (i) => {\r\n        \r\n        return this.props.TaskDetails[i];\r\n    }\r\n    \r\n      \r\n\r\n    render() {\r\n        \r\n        const tableContainer = {width:\"100%\"};\r\n        const headerStyle = {display:\"flex\"};\r\n        let TaskDetailsTable;\r\n        if (this.props.TaskDetails) {\r\n            TaskDetailsTable =<ReactDataGrid\r\n            columns={this._columns}\r\n            rowGetter={this.rowGetter}\r\n            rowsCount={this.props.TaskDetails.length} \r\n             minHeight={1000} \r\n             isScrolling={false}\r\n             sortColumn={true}\r\n            />\r\n        }else{\r\n            TaskDetailsTable = <div className=\"text-center\">\r\n                <Spinner className=\"mr-3\" animation=\"border\" variant=\"secondary\" />\r\n                <span>Loading Task Details ...</span>\r\n                </div> ;\r\n        }\r\n        return (\r\n            <>\r\n                <Card style={tableContainer}>\r\n                    <Row>\r\n                        <Col style={headerStyle} className=\"form-header-container\" md={12}>\r\n                            <FontAwesomeIcon icon={faBars} className=\"mr-2\"/>\r\n                            <h5 className=\"form-header\">My Workflow Tasks</h5>\r\n                        </Col>\r\n                        <Col md={12}>                                            \r\n                            {TaskDetailsTable}\r\n                        </Col>\r\n                    </Row>                 \r\n                </Card>   \r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row,Col,Card, FormGroup,Input, Label } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport TaskTable from './MyTasksTable'\r\nimport GetTaskListitem from '../../Services/SharePoint/GetListItems'\r\nimport GetTasks from '../../Services/SharePoint/GetTaskListitem'\r\nimport GetCompletedTask from '../../Services/SharePoint/GetCompletedTask'\r\nimport GetCurrentUserid from '../../Services/SharePoint/GetCurrentLoinUserID'\r\nimport GetCurrentUser from '../../Services/SharePoint/GetCurrentLoginUser'\r\nimport './NewRequest.css'\r\nexport default class MyTasks extends Component {\r\n    constructor(props, contex) {\r\n        super(props, contex);\r\n        this.state = {\r\n            loaded:false,\r\n            TaskDetails: null,\r\n            PONumber:\"\",\r\n            CurrentUserID:\"1\",\r\n            CurrentStatus:\"All\",\r\n            DataValue: \"True\",\r\n            DepartmentFilter:\"All\",\r\n        };\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n     this.GetTaskDetails();\r\n     //this.intervalID = setInterval(this.GetTaskDetails, 1000);\r\n    // setInterval(this.GetTaskDetails, 100000);\r\n    }\r\n    \r\n    GetTaskDetails = ()=>{\r\n\r\n        GetCurrentUserid().then(u => \r\n            this.setState({\r\n            CurrentUserID:u,\r\n           // CurrentStatus: document.getElementById('exampleSelect').value    \r\n            })\r\n        );\r\n\r\n        GetTasks('Workflow Tasks',this.state.CurrentUserID).then(r => \r\n            this.setState({\r\n                TaskDetails:r.filter(item => item.AssignedToId === this.state.CurrentUserID & item.Data=== this.state.DataValue),\r\n                CurrentStatus:\"In Progress\",\r\n             })    \r\n        )\r\n        \r\n        \r\n       //console.log(this.state.CurrentUserID)\r\n    }\r\n    \r\n    \r\n\r\n    async filterItems(requestData) {\r\n        \r\n        let result = [];\r\n        for(let item of this.state.TaskDetails) {\r\n          if(item.PONumber.indexOf(requestData.PONumber) > -1) {\r\n            result.push(item);\r\n          }\r\n        }\r\n        return Promise.resolve(result);\r\n      }\r\n\r\n    handleSearchInput = (event)=>{\r\n        this.setState({PONumber: event.target.value});\r\n    }\r\n\r\n    searchData =() => {\r\n        this.filterItems({ PONumber: this.state.PONumber}).then(items => {\r\n            this.setState({\r\n                TaskDetails: items,\r\n                CurrentStatus:\"\",\r\n            });\r\n        });\r\n    }\r\n\r\n    resetSearch = (event)=>{\r\n        this.setState({\r\n            CurrentStatus: document.getElementById('exampleSelect').value\r\n        })  \r\n        this.GetTaskDetails();\r\n        //alert(this.state.CurrentStatus  )\r\n    }\r\n    \r\n\r\n    filterStatus = (event)=>{\r\n        this.setState({\r\n            CurrentStatus:document.getElementById('exampleSelect').value,\r\n            loaded:false,\r\n            TaskDetails: null,\r\n            PONumber:\"\",\r\n            \r\n           \r\n        })  \r\n    }\r\n    \r\n\r\n    render() {\r\n        //console.log(\"Task Details in grid\", this.state.TaskDetails);\r\n        //console.log(\"Currnet User in state\", this.state.CurrentUserID);\r\n        //console.log(\"Currnet Status\", this.state.CurrentStatus);\r\n        //console.log(this.state.CurrentUserID)\r\n        const tableContainer = {width:\"100%\"};\r\n        const headerStyle = {display:\"flex\"};\r\n        const parentcontainer = {minWidth:\"100%\",maxWidth:\"100%\"};\r\n        let TaskDetails = this.state.TaskDetails;\r\n        \r\n        \r\n        if(this.state.CurrentStatus === \"In Progress\"){\r\n            GetTasks('Workflow Tasks',this.state.CurrentUserID).then(r => \r\n                this.setState({\r\n                    TaskDetails:r.filter(item => item.AssignedToId === this.state.CurrentUserID & item.Data=== this.state.DataValue),\r\n                    CurrentStatus:\"\",\r\n                 })    \r\n            )\r\n         }\r\n         if(this.state.CurrentStatus === \"Completed\"){\r\n          //  clearInterval(this.intervalID);\r\n            GetCompletedTask('Workflow Tasks',this.state.CurrentUserID).then(r => \r\n                this.setState({\r\n                    TaskDetails:r.filter(item => item.AssignedToId === this.state.CurrentUserID & item.Data=== this.state.DataValue ),\r\n                    CurrentStatus:\"\",\r\n                 })    \r\n            )\r\n         }\r\n         \r\n       \r\n        return (\r\n            \r\n        <div style={parentcontainer}>    \r\n            <Card style={tableContainer} className=\"mb-3\">\r\n                <Row>\r\n                        <Col style={headerStyle} className=\"form-header-container\" md={12}>\r\n                            <FontAwesomeIcon icon={faSearch} className=\"mr-2\"/>\r\n                            <h5 className=\"form-header\">Filter My Tasks</h5>\r\n                        </Col>\r\n                </Row>\r\n                <form className=\"form-horizontal\">\r\n                            <FormGroup row>\r\n                            <div className=\"col-md-4\">\r\n                                <Label for=\"exampleSelect\" className=\"mt-2\">Filter by Status</Label>                                  \r\n                                <Input type=\"select\" name=\"select\" id=\"exampleSelect\" \r\n                                onChange={this.filterStatus}>\r\n                                        \r\n                                        <option>In Progress</option>\r\n                                        <option value=\"Completed\">Tasks completed recently</option>\r\n                                </Input>\r\n                            </div> \r\n                                 \r\n                            <div className=\"col-md-4\">\r\n                                    <Label for=\"exampleSelect\" className=\"mt-2\">Search PO</Label>                                    \r\n                                    <div className=\"input-group-append\">\r\n                                    <Input type=\"text\" placeholder=\"Enter PO Number\" value={this.state.PONumber} onChange={this.handleSearchInput}/>\r\n                                        <button className=\"btn btn-sm btn-success mr-2 ml-2 btn-cancel\" onClick={this.searchData} type=\"button\">Search</button>\r\n                                        <button className=\"btn btn-sm btn-danger\" onClick={this.resetSearch} type=\"button\">Reset</button>\r\n                                    </div>\r\n                            </div>                               \r\n                            </FormGroup>\r\n                        </form>     \r\n                </Card>\r\n                \r\n            <TaskTable TaskDetails={TaskDetails}></TaskTable>\r\n                \r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport  { Redirect } from 'react-router-dom' \r\n\r\nexport default class Home extends Component {\r\n    \r\n    \r\n    render() {\r\n        \r\n        //localStorage.setItem('POHomeURL',\"/po-request/view/68\");\r\n        let viewform;\r\n        const redirecturl = localStorage.getItem('POHomeURL');\r\n        console.log(redirecturl);\r\n        if (redirecturl !== null){\r\n            viewform = <Redirect to={`${redirecturl}`}/>\r\n            localStorage.removeItem('POHomeURL');\r\n        }\r\n        \r\n        return (\r\n            \r\n            <div>\r\n                {viewform}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const PMRequest = async (listname) => {\r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$select=*&$filter=PendingWith eq 'Purchase MGR'&$top=10000&$orderby=ID%20desc`, \r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    return data.d.results.length;\r\n }\r\n\r\nexport default PMRequest;","const DMReuest = async (listname) => {\r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$select=*&$filter=PendingWith eq 'Depart. MGR'&$top=10000&$orderby=ID%20desc`, \r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    //console.log(data.d.results.length);\r\n    return data.d.results.length;\r\n }\r\n\r\nexport default DMReuest;","import React  from 'react';\r\nimport * as momentImported from 'moment'; const moment = momentImported;\r\nconst PM10DaysRequest = async (listname,fromDate,TODate) => {\r\n    \r\n     \r\n     \r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$select=*&$filter=PendingWith eq 'Purchase MGR' and Created ge datetime'${fromDate}' and Created le datetime'${TODate}'`, \r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    console.log(data.d.results.length);\r\n    return data.d.results.length;\r\n }\r\n\r\nexport default PM10DaysRequest;","import React  from 'react';\r\nimport * as momentImported from 'moment'; const moment = momentImported;\r\nconst DM10DaysRequest = async (listname,fromDate,TODate) => {\r\n    \r\n     \r\n     \r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$select=*&$filter=PendingWith eq 'Depart. MGR' and Created ge datetime'${fromDate}' and Created le datetime'${TODate}''`, \r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    console.log(data.d.results.length);\r\n    return data.d.results.length;\r\n }\r\n\r\nexport default DM10DaysRequest;","import React  from 'react';\r\nimport * as momentImported from 'moment'; const moment = momentImported;\r\nconst ApprovalInBetween = async (listname,fromDate,TODate) => {\r\n    \r\n     \r\n     \r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$select=*&$filter=ResponseForDashboard eq 'Approved' and Created ge datetime'${fromDate}' and Created le datetime'${TODate}'&$top=10000&$orderby=ID%20desc'`, \r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    console.log(data.d.results.length);\r\n    return data.d.results.length;\r\n }\r\n\r\nexport default ApprovalInBetween;","import React  from 'react';\r\nimport * as momentImported from 'moment'; const moment = momentImported;\r\nconst TotalCountInBetween= async (listname,fromDate,TODate) => {\r\n    \r\n     \r\n     \r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$select=*&$filter=Created ge datetime'${fromDate}' and Created le datetime'${TODate}'&$top=10000&$orderby=ID%20desc'`, \r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    console.log(data.d.results.length);\r\n    return data.d.results.length;\r\n }\r\n\r\nexport default TotalCountInBetween;","import React  from 'react';\r\nimport * as momentImported from 'moment'; const moment = momentImported;\r\nconst RejectedInBetween = async (listname,fromDate,TODate) => {\r\n    \r\n     \r\n     \r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$select=*&$filter=ResponseForDashboard eq 'Rejected' and Created ge datetime'${fromDate}' and Created le datetime'${TODate}'&$top=10000&$orderby=ID%20desc'`, \r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    console.log(data.d.results.length);\r\n    return data.d.results.length;\r\n }\r\n\r\nexport default RejectedInBetween;","import React  from 'react';\r\nimport * as momentImported from 'moment'; const moment = momentImported;\r\nconst GM10DaysRequest = async (listname,fromDate,TODate) => {\r\n    \r\n     \r\n     \r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$select=*&$filter=PendingWith eq 'General MGR' and Created ge datetime'${fromDate}' and Created le datetime'${TODate}'&$top=10000&$orderby=ID%20desc'`, \r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    //console.log(data.d.results.length);\r\n    return data.d.results.length;\r\n }\r\n\r\nexport default GM10DaysRequest;","const GMRequest = async (listname) => {\r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$select=*&$filter=PendingWith eq 'General MGR'&$top=10000&$orderby=ID%20desc`, \r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    return data.d.results.length;\r\n }\r\n\r\nexport default GMRequest;","const ApprovedRequest = async (listname) => {\r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$select=*&$filter=ResponseForDashboard eq 'Approved'&$top=10000&$orderby=ID%20desc`, \r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    return data.d.results.length;\r\n }\r\n\r\nexport default ApprovedRequest;","const RejectedRequest = async (listname) => {\r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$select=*&$filter=ResponseForDashboard eq 'Rejected'&$top=10000&$orderby=ID%20desc`, \r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    return data.d.results.length;\r\n }\r\n\r\nexport default RejectedRequest;","const TotalReuest = async (listname) => {\r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$top=10000&$orderby=ID%20desc'`, \r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    console.log(data.d.results);\r\n    return data.d.results.length;\r\n    \r\n }\r\n\r\nexport default TotalReuest;","import React from 'react';\r\nimport {Pie, Doughnut} from 'react-chartjs-2';\r\nimport PMRequest from '../../Services/SharePoint/PMRequest';\r\nimport DMRequest from '../../Services/SharePoint/DMRequestCount';\r\nimport PMInBetweenRequest from '../../Services/SharePoint/PMInBetweenRequest';\r\nimport DMInBetweenRequest from '../../Services/SharePoint/DMInBetweenRequest';\r\nimport ApprovalInBetween from '../../Services/SharePoint/ApprovalCountInBetween';\r\nimport TotalCountInBetween from '../../Services/SharePoint/TotaLCountInBetween';\r\nimport RejectedInBetween from '../../Services/SharePoint/RejectedInBetween';\r\nimport GMInBetweenRequest from '../../Services/SharePoint/GMInBetweenRequest';\r\nimport GMRequest from '../../Services/SharePoint/GMRequestCount';\r\nimport ApprovedRequest from '../../Services/SharePoint/ApprovalCount';\r\nimport RejectedRequest from '../../Services/SharePoint/RejectedCount';\r\nimport TotalRequest from '../../Services/SharePoint/TotalCount';\r\nimport {Row, Col,Card, Form, FormGroup, Label, Input, Button,Table,form } from 'reactstrap';\r\nimport './NewRequest.css'\r\nimport CountUp from 'react-countup';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport swal from 'sweetalert';\r\n\r\nconst dateNow = new Date(); // Creating a new date object with the current date and time\r\nconst year = dateNow.getFullYear(); // Getting current year from the created Date object\r\nconst monthWithOffset = dateNow.getUTCMonth() + 1; // January is 0 by default in JS. Offsetting +1 to fix date for calendar.\r\nconst month = // Setting current Month number from current Date object\r\n  monthWithOffset.toString().length < 2 // Checking if month is < 10 and pre-prending 0 to adjust for date input.\r\n    ? `0${monthWithOffset}`\r\n    : monthWithOffset;\r\nconst date =\r\n  dateNow.getUTCDate().toString().length < 2 // Checking if date is < 10 and pre-prending 0 if not to adjust for date input.\r\n    ? `0${dateNow.getUTCDate()}`\r\n    : dateNow.getUTCDate();\r\n\r\nconst materialDateInput = `${year}-${month}-${date}`; \r\n\r\nexport default class Dashboard extends React.Component {\r\n    constructor(props, contex) {\r\n        super(props, contex);\r\n        this.state = {\r\n            PMPending:\"\",\r\n            DMPending:\"\",\r\n            GMPending:\"\",\r\n            Approved:\"\",\r\n            Rejected:\"\",\r\n            Total:\"\",\r\n            RequestDuration:\"All\",\r\n            fromDate:\"\",\r\n            TODate:\"\",\r\n            \r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.Dash();\r\n        \r\n       }\r\n       Dash = ()=>{\r\n        TotalRequest('PMO').then(r =>\r\n          this.setState({\r\n              Total:r\r\n          })\r\n         );\r\n         PMRequest('PMO').then(r =>\r\n            this.setState({\r\n                PMPending:r\r\n            })\r\n           );\r\n           DMRequest('PMO').then(r =>\r\n            this.setState({\r\n                DMPending:r, \r\n            }) \r\n           );\r\n           GMRequest('PMO').then(r =>\r\n            this.setState({\r\n                GMPending:r,\r\n            }) \r\n           );\r\n           ApprovedRequest('PMO').then(r =>\r\n            this.setState({\r\n                Approved:r,\r\n            }) \r\n            );\r\n            RejectedRequest('PMO').then(r =>\r\n              this.setState({\r\n                  Rejected:r,\r\n               \r\n              }) \r\n              );       \r\n       }\r\n       \r\n    getdata = ()=>{\r\n      TotalRequest('PMO').then(r =>\r\n        this.setState({\r\n            Total:r\r\n        })\r\n        \r\n      )\r\n      ApprovedRequest('PMO').then(r =>\r\n        this.setState({\r\n            Approved:r,\r\n        }) \r\n        );\r\n        RejectedRequest('PMO').then(r =>\r\n          this.setState({\r\n              Rejected:r,\r\n           \r\n          }) \r\n          );  \r\n          PMRequest('PMO').then(r =>\r\n            this.setState({\r\n                PMPending:r\r\n            })\r\n           );\r\n           DMRequest('PMO').then(r =>\r\n            this.setState({\r\n                DMPending:r, \r\n            }) \r\n           );\r\n           GMRequest('PMO').then(r =>\r\n            this.setState({\r\n                GMPending:r,\r\n            }) \r\n           );\r\n    }\r\n    PeriodData = ()=> {\r\n      if(this.state.fromDate  === \"\")\r\n      {\r\n        swal(\"Please choose From Date\")\r\n      }\r\n      else if(this.state.TODate  === \"\")\r\n      {\r\n        swal(\"Please choose End Date\")\r\n      }\r\n      else{  \r\n      console.log (this.state.fromDate);\r\n      console.log (this.state.TODate);\r\n      ApprovalInBetween('PMO',this.state.fromDate,this.state.TODate).then(r =>\r\n        this.setState({\r\n          Approved:r,\r\n      })\r\n      )\r\n      RejectedInBetween('PMO',this.state.fromDate,this.state.TODate).then(r =>\r\n        this.setState({\r\n          Rejected:r,\r\n        }) \r\n       );\r\n      TotalCountInBetween('PMO',this.state.fromDate,this.state.TODate).then(r =>\r\n        this.setState({\r\n          Total:r,\r\n        }) \r\n       )\r\n       PMInBetweenRequest('PMO',this.state.fromDate,this.state.TODate).then(r =>\r\n        this.setState({\r\n          PMPending:r,\r\n        }) \r\n       );\r\n       DMInBetweenRequest('PMO',this.state.fromDate,this.state.TODate).then(r =>\r\n        this.setState({\r\n          DMPending:r,\r\n        }) \r\n       );\r\n       GMInBetweenRequest('PMO',this.state.fromDate,this.state.TODate).then(r =>\r\n        this.setState({\r\n          GMPending:r,\r\n        }) \r\n       );\r\n     \r\n      }\r\n    }  \r\n       \r\n  render() {\r\n    const tableContainer = {width:\"100%\"};\r\n    const tableContainer2 = {width:\"100%\"};\r\n    const headerStyle = {display:\"flex\"};\r\n    const parentcontainer = {minWidth:\"100%\",maxWidth:\"100%\"};\r\n    \r\n    \r\n      \r\n\r\n    return (\r\n      \r\n        \r\n\r\n        <div style={parentcontainer}>    \r\n        <Card style={tableContainer}>\r\n                    <Row>\r\n                    <p id=\"Expo\">Filter PO Status</p>\r\n                        <Col style={headerStyle} className=\"form-header-container\" md={12}>\r\n                        <TextField\r\n                          id=\"date\"\r\n                          type=\"date\"\r\n                          \r\n                          onChange={(event) => {\r\n                            const fromDate01= (event.target.value) + 'T00:00:00.000Z'\r\n                            this.setState({\r\n                              fromDate:fromDate01\r\n                           })\r\n                            \r\n                          }}     \r\n                        />\r\n                        <TextField\r\n                          id=\"date\"\r\n                          type=\"date\"\r\n                         \r\n                          onChange={(event) => {\r\n                            const TODate01 = (event.target.value) + 'T00:00:00.000Z'\r\n                            this.setState({\r\n                              TODate:TODate01\r\n                           })\r\n                          \r\n                          }}  \r\n                        />\r\n                        <button className=\"btn btn-sm btn-success mr-2 ml-2 btn-cancel\" onClick={this.PeriodData} type=\"button\">Search</button>\r\n                        <button className=\"btn btn-sm btn-danger\" onClick={this.getdata} type=\"button\">Reset</button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    \r\n                </Card><br></br>\r\n        <Card style={tableContainer} className=\"mb-3\"  >\r\n            <div className= \"row\">\r\n            <div className= \"col-md-6 col-sm-6 col-lg-6\">\r\n            <div className= \"col-md-12 col-sm-12 col-lg-12\">\r\n              <p className=\"DashboardName\">Purchase Order Request</p>\r\n            <div className=\" col-md-6 col-sm-6 col-lg-6 \" id=\"TotalRequest\" >\r\n             <p>Total Request</p>\r\n            <p id=\"TR\"><CountUp start={0} end={this.state.Total} /></p>\r\n            </div>\r\n            </div></div>\r\n            <div className= \"col-md-6 col-lg-6 col-sm-6 col-xs-6\">\r\n           \r\n            <div style={parentcontainer}>  \r\n        <Doughnut style={parentcontainer}\r\n        \r\n          data={{\r\n            labels: ['Pendng with Purchase Manager', 'Pendng with Department Manager', 'Pendng with General Manager'],\r\n            datasets: [\r\n              {\r\n                label: 'Request Status',\r\n           backgroundColor: [\r\n             '#B21F00',\r\n             '#C9DE00',\r\n             '#2FDE00',\r\n           ],\r\n           hoverBackgroundColor: [\r\n           '#501800',\r\n           '#4B5000',\r\n           '#175000',\r\n           ], \r\n          \r\n           data: [this.state.PMPending,this.state.DMPending,this.state.GMPending]  \r\n              }\r\n            ]\r\n              \r\n          }}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:'',\r\n              fontSize:20\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'right'\r\n            }\r\n          }}\r\n        />\r\n        </div> </div>  </div> \r\n       </Card> \r\n       <div className=\"row\">\r\n\r\n           <div className=\"col-md-4\">\r\n           <div style={parentcontainer}>    \r\n         <Card style={tableContainer2} className=\"mb-3\" id=\"DashTabs\">\r\n         \r\n                <div className=\"StatusCoumn\">\r\n                    <p className=\"statusheading\">Pending with Purchase Manager</p>\r\n                    <p className=\"PMItems\"><CountUp start={0} end ={this.state.PMPending}/></p>\r\n             \r\n                \r\n                </div>\r\n             </Card>\r\n             </div>\r\n           </div>\r\n           <div className=\"col-md-4\">\r\n           <div style={parentcontainer}>    \r\n         <Card style={tableContainer2} className=\"mb-3\" id=\"DashTabs\">\r\n         \r\n                <div className=\"StatusCoumn\">\r\n                    <p className=\"statusheading\">Pending with Department Manager</p>\r\n                    <p className=\"PMItems\"><CountUp start={0} end ={this.state.DMPending}/></p>\r\n             \r\n                \r\n                </div>\r\n             </Card>\r\n             </div>\r\n           </div>\r\n           <div className=\"col-md-4\">\r\n           <div style={parentcontainer}>    \r\n         <Card style={tableContainer2} className=\"mb-3\" id=\"DashTabs\">\r\n         \r\n                <div className=\"StatusCoumn\">\r\n                    <p className=\"statusheading\">Pending with General Manager</p>\r\n                    <p className=\"PMItems\"><CountUp start={0} end ={this.state.GMPending}/></p>\r\n             \r\n                \r\n                </div>\r\n             </Card>\r\n             </div>\r\n           </div>\r\n       </div>\r\n       <div className=\"row\">\r\n\r\n           <div className=\"col-md-4 \">\r\n           <div style={parentcontainer}>    \r\n         <Card style={tableContainer2} className=\"mb-3\" id=\"DashTabs\">\r\n         \r\n                <div className=\"StatusCoumn\">\r\n                    <p className=\"statusheading\">Pending with Asst General Manager</p>\r\n                    <p className=\"PMItems\"><CountUp start={0} end ={this.state.Approved}/></p>\r\n             \r\n                \r\n                </div>\r\n             </Card>\r\n             </div>\r\n           </div>\r\n\r\n           <div className=\"col-md-4 \">\r\n           <div style={parentcontainer}>    \r\n         <Card style={tableContainer2} className=\"mb-3\" id=\"DashTabs\">\r\n         \r\n                <div className=\"StatusCoumn\">\r\n                    <p className=\"statusheading\">Approved PO</p>\r\n                    <p className=\"PMItems\"><CountUp start={0} end ={this.state.Approved}/></p>\r\n             \r\n                \r\n                </div>\r\n             </Card>\r\n             </div>\r\n           </div>\r\n\r\n           <div className=\"col-md-4\">\r\n           <div style={parentcontainer}>    \r\n         <Card style={tableContainer2} className=\"mb-3\" id=\"DashTabs\">\r\n         \r\n                <div className=\"StatusCoumn\">\r\n                    <p className=\"statusheading\">Rejected PO</p>\r\n                    <p className=\"PMItems\"><CountUp start={0} end ={this.state.Rejected}/></p>\r\n             \r\n                \r\n                </div>\r\n             </Card>\r\n             </div>\r\n           </div>\r\n           \r\n       </div>\r\n      </div>\r\n         \r\n\r\n    \r\n    );\r\n    \r\n  }\r\n}","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport NumberFormat from 'react-number-format'\r\n\r\n       const GetPOData = async (listname) => {\r\n            const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?&$top=10000&$orderby=ID%20desc')`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Accept\": \"application/json; odata=verbose\"\r\n                },\r\n            });\r\n            let results = [];\r\n            const data = await resp.json();\r\n            console.log(data.d.results)\r\n            for (var i = 0; i <data.d.results.length; i++) {\r\n            const Total = data.d.results[i].yyrh\r\n            const Cuurency = `${JSON.parse(data.d.results[i].POJSONData).Currency} `\r\n            const GT = Cuurency+Total\r\n            const GT2 = (GT.replace(/\"([^\"]+(?=\"))\"/g, '$1'));\r\n            console.log(GT2)\r\n            results.push({TicketNumber:data.d.results[i].vwno,RespondedDate:data.d.results[i].RespondedDate, PONumber:data.d.results[i].chff,POMaker:data.d.results[i].j3xm,Department:data.d.results[i].ozud,GrandTotal:GT2\r\n                \r\n                ,RequestedDate:data.d.results[i].Created,RequestStatus:data.d.results[i].RequestStatus,ApprovalStatus:data.d.results[i].ApprovalStatus,PendingWith:data.d.results[i].PendingWith})\r\n                //console.log(results)\r\n            }\r\n            return results;\r\n         }\r\n        export default GetPOData;","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport NumberFormat from 'react-number-format'\r\n\r\n       const GetPODataInBetween = async (listname,fromDate01,TODate01) => {\r\n            const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$select=*&$filter=(Created ge datetime'${fromDate01}') and (Created le datetime'${TODate01}')`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Accept\": \"application/json; odata=verbose\"\r\n                },\r\n            });\r\n            let results = [];\r\n            const data = await resp.json();\r\n            console.log(data.d.results)\r\n            for (var i = 0; i <data.d.results.length; i++) {\r\n            results.push({TicketNumber:data.d.results[i].vwno, PONumber:data.d.results[i].chff,POMaker:data.d.results[i].j3xm,Department:data.d.results[i].ozud,GrandTotal:\r\n                <NumberFormat style={{textAlign: 'right'}} value={data.d.results[i].yyrh || 0} displayType={'text'} thousandSeparator={true} prefix={`${JSON.parse(data.d.results[i].POJSONData).Currency} `}/>\r\n                ,RequestedDate:data.d.results[i].Created,RequestStatus:data.d.results[i].RequestStatus,ApprovalStatus:data.d.results[i].ApprovalStatus,PendingWith:data.d.results[i].PendingWith})\r\n                //console.log(results)\r\n            }\r\n            return results;\r\n         }\r\n        export default GetPODataInBetween;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function FilterComponent(props) {\r\n  const { columnDef, onFilterChanged } = props; \r\n  return (\r\n    <TextField\r\n      id=\"date\"\r\n      type=\"date\"\r\n      defaultValue=\"2020-07-28\"\r\n      onChange={(event) => {\r\n        onFilterChanged(columnDef.tableData.id, event.target.value);\r\n      }}\r\n    />\r\n  )\r\n}","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport GetPOItems from '../../Services/SharePoint/GetListItems'\r\nimport { Component } from 'react';\r\nimport moment from 'react-moment';\r\nimport { Row,Col,Card,Spinner, FormGroup,Input,Label } from 'reactstrap';\r\nimport './NewRequest.css';\r\nimport { forwardRef } from 'react';\r\nimport GetPOData from '../../Services/SharePoint/GetPOData'\r\nimport GetPODataInBetween from '../../Services/SharePoint/GetPOInBetween'\r\nimport FilterComponent from './ExportDateFilter'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NumberFormat from 'react-number-format'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { keys } from '@material-ui/core/styles/createBreakpoints';\r\nimport swal from 'sweetalert';\r\nlet Jdata;\r\nlet results;\r\nlet PODetails;\r\nlet fromDate;\r\nlet TODate;\r\nlet Table;\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n    \r\n  \r\nexport default class ExportPORequest extends Component{\r\n    constructor(props, contex) {\r\n        super(props, contex);    \r\n        this.state = {\r\n            loaded:false,\r\n            PODetails: [],\r\n\r\n          }\r\n    }\r\n    GrandTotalFormatter = (props)=>{\r\n      return <NumberFormat style={{textAlign: 'right'}} value={props.value || 0} displayType={'text'} thousandSeparator={true} prefix={`${JSON.parse(PODetails.dependentValues.POJSONData).Currency} `}/>\r\n  }\r\n   \r\n    componentDidMount() {\r\n      this.getdata()\r\n      } \r\n      PeriodData = ()=> {\r\n        console.log (this.state.fromDate);\r\n        console.log (this.state.TODate);\r\n        if(this.state.fromDate === undefined ){\r\n          swal(\"Provide From Date\");\r\n        }\r\n        else if(this.state.TODate === undefined){\r\n          swal(\"Provide To Date\");\r\n        }\r\n        else{\r\n        GetPODataInBetween('PMO',this.state.fromDate,this.state.TODate).then(r =>\r\n          this.setState({\r\n            PODetails:r\r\n        })\r\n        )\r\n        \r\n      }\r\n      \r\n      }  \r\n      getdata = ()=>{\r\n        GetPOData('PMO').then(r =>\r\n          this.setState({\r\n            PODetails:r\r\n        })\r\n        )\r\n      }\r\n      \r\n    render() {  \r\n      const tableContainer = {width:\"100%\"};\r\n      const headerStyle = {display:\"flex\"};\r\n      const parentcontainer = {minWidth:\"100%\",maxWidth:\"100%\"};\r\n      const JsonData = [this.state.PODetails]\r\n      console.log(this.state.PODetails)\r\n        let Table = <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"\"\r\n      \r\n      columns={[\r\n        { title: 'Ticket Number', field: 'TicketNumber' },\r\n        { title: 'PO Number', field: 'PONumber' },\r\n        { title: 'PO Maker', field: 'POMaker' },\r\n        { title: 'Department', field: 'Department' },\r\n        { title: 'Grand Total', field: 'GrandTotal',formatter:this.GrandTotalFormatter },\r\n        { title: 'Requested Date', field: 'RequestedDate', filterComponent: FilterComponent },      \r\n        { title: 'Request Status', field: 'RequestStatus' },\r\n        { title: 'Approval Status', field: 'ApprovalStatus' },\r\n        { title: 'Pending with', field: 'PendingWith' },\r\n        { title: 'Responded Date', field: 'RespondedDate', }\r\n      ]}\r\n      data={this.state.PODetails}   \r\n      options={{\r\n        exportButton: true,\r\n        pageSize: 50,\r\n        isLoading: true,\r\n        exportAllData: true,\r\n      }}\r\n      />\r\n    \r\n    \r\n     \r\n  \r\nreturn (\r\n \r\n <div style={parentcontainer}>\r\n    <Card style={tableContainer}>\r\n                    <Row>\r\n                    <p id=\"Expo\">Export PO with in dates</p>\r\n                        <Col style={headerStyle} className=\"form-header-container\" md={12}>\r\n                        <TextField\r\n                          id=\"date\"\r\n                          type=\"date\"\r\n                         \r\n                          onChange={(event) => {\r\n                            const fromDate01= (event.target.value) + 'T00:00:00.000Z'\r\n                            this.setState({\r\n                              fromDate:fromDate01\r\n                           })\r\n                            \r\n                          }}     \r\n                        />\r\n                        <TextField\r\n                          id=\"date\"\r\n                          type=\"date\"\r\n                          \r\n                          onChange={(event) => {\r\n                            const TODate01 = (event.target.value) + 'T00:00:00.000Z'\r\n                            this.setState({\r\n                              TODate:TODate01\r\n                           })\r\n                          \r\n                          }}  \r\n                        />\r\n                        <button ref=\"Btn\" className=\"btn btn-sm btn-success mr-2 ml-2 btn-cancel\" onClick={this.PeriodData} type=\"button\">Search</button>\r\n                        <button className=\"btn btn-sm btn-danger\" onClick={this.getdata} type=\"button\">Reset</button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    \r\n                </Card><br></br>\r\n  \r\n   {Table}</div>\r\n\r\n)\r\n}\r\n}","import React, { Component } from 'react'\r\nimport { Row,Col,Card, Spinner } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  faBars, faBorderNone } from '@fortawesome/free-solid-svg-icons';\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport Moment from 'react-moment';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nexport default class MyTasksTable extends Component {\r\n    constructor(props, contex) {\r\n        super(props, contex);\r\n        this.initColumnDefs();\r\n    }\r\n\r\n    formatDate(data) {\r\n        return <Moment format=\"DD-MM-YYYY  hh:mm\">\r\n                {data}\r\n            </Moment>;\r\n      }\r\n     \r\n\r\n    itemViewFormatter =(props) => {\r\n        return <a className=\"table-anchor\" target=\"_self\"  rel=\"noopener noreferrer\" href={`/sites/apps/PMO/Lists/ttt%20Tasks/EditForm.aspx?ID=${props.dependentValues.Id}`}>{props.value}</a>    \r\n    };\r\n    GrandTotalFormatter = (props)=>{\r\n        if(props.dependentValues.Currency === null){\r\n            return <NumberFormat style={{textAlign: 'right'}} value={props.value || 0} displayType={'text'} thousandSeparator={true} prefix={\"SAR\"}/>\r\n    \r\n        }\r\n        else{\r\n        return <NumberFormat style={{textAlign: 'right'}} value={props.value || 0} displayType={'text'} thousandSeparator={true} prefix={`${props.dependentValues.Currency} `}/>\r\n    \r\n    }}\r\n    DateFormatter = props => (\r\n        <div className=\"text-center py-2\">\r\n            <span>{this.formatDate(props.value)}</span>\r\n        </div>\r\n    )\r\n    CheckPriority = (props)=>{\r\n        if(props.value === \"High\"){\r\n        return (<div style={{background: 'rgba(220, 53, 69,0.7)', color: 'white',fontWeight:'bold',textAlign:'center'}}>{props.value}</div>)\r\n    }\r\n    else{\r\n        return (<div>{props.value}</div>)\r\n    }\r\n}\r\n    \r\n\r\n    initColumnDefs = () => {\r\n        this._columns = [\r\n            {\r\n                key: 'Id',\r\n                name: 'Task ID',\r\n                width:'5%'\r\n            },\r\n            {\r\n                key: 'PONumber',\r\n                name: 'PO Number',\r\n                width:'10%',\r\n                formatter: this.itemViewFormatter,\r\n                getRowMetaData: (row) => row\r\n            },\r\n            {\r\n                key: 'InitiatorName',\r\n                name: 'Initiator Name',\r\n                width:'15%'\r\n            },\r\n            {\r\n                key: 'Department',\r\n                name: 'Department',\r\n                width:'15%'\r\n            },   \r\n            {\r\n                key: 'Created',\r\n                name: 'Assigned Date',\r\n                width:'15%',\r\n                formatter: this.DateFormatter    \r\n            },\r\n            {\r\n                key: 'DueDate',\r\n                name: 'Due Date',\r\n                width:'15%',\r\n                formatter: this.DateFormatter    \r\n            },\r\n            {\r\n                key: 'GrandTotal',\r\n                name: 'Grand Total',\r\n                width:'10%',\r\n                formatter: this.GrandTotalFormatter,\r\n                getRowMetaData: (row) => row\r\n            },\r\n            {\r\n                key: 'Status',\r\n                name: 'Status',\r\n                width:'15%'\r\n            },\r\n            {\r\n                key: 'ReviwalStatus',\r\n                name: 'Reviewal Status',\r\n                width:'15%'\r\n            },\r\n            {\r\n                key: 'RespondedDate',\r\n                name: 'RespondedDate',\r\n                width:'15%'\r\n            },\r\n            {\r\n                key: 'POPriority',\r\n                name: 'Priority',\r\n                width:'15%',\r\n                formatter: this.CheckPriority,\r\n                getRowMetaData: (row) => row,\r\n                \r\n            }            \r\n            \r\n        ];\r\n    };\r\n    \r\n    rowGetter = (i) => {\r\n        \r\n        return this.props.TaskDetails[i];\r\n    }\r\n    \r\n      \r\n\r\n    render() {\r\n        \r\n        const tableContainer = {width:\"100%\"};\r\n        const headerStyle = {display:\"flex\"};\r\n        let TaskDetailsTable;\r\n        if (this.props.TaskDetails) {\r\n            TaskDetailsTable =<ReactDataGrid\r\n            columns={this._columns}\r\n            rowGetter={this.rowGetter}\r\n            rowsCount={this.props.TaskDetails.length} \r\n             minHeight={1000} \r\n             isScrolling={false}\r\n             sortColumn={true}\r\n            />\r\n        }else{\r\n            TaskDetailsTable = <div className=\"text-center\">\r\n                <Spinner className=\"mr-3\" animation=\"border\" variant=\"secondary\" />\r\n                <span>Loading Task Details ...</span>\r\n                </div> ;\r\n        }\r\n        return (\r\n            <>\r\n                <Card style={tableContainer}>\r\n                    <Row>\r\n                        <Col style={headerStyle} className=\"form-header-container\" md={12}>\r\n                            <FontAwesomeIcon icon={faBars} className=\"mr-2\"/>\r\n                            <h5 className=\"form-header\">My Completed Tasks</h5>\r\n                        </Col>\r\n                        <Col md={12}>                                            \r\n                            {TaskDetailsTable}\r\n                        </Col>\r\n                    </Row>                 \r\n                </Card>   \r\n            </>\r\n        )\r\n    }\r\n}\r\n","const GetTaskListItems = async (listname,CurrentUserID) => {\r\n    const resp = await fetch(`/sites/apps/PMO/_api/web/lists/GetByTitle('${listname}')/items?$filter=AssignedTo eq '${CurrentUserID}'`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Accept\": \"application/json; odata=verbose\"\r\n        },\r\n    });\r\n    const data = await resp.json();\r\n    //console.log(data.d.results);\r\n    return data.d.results;\r\n }\r\nexport default GetTaskListItems;","import React, { Component } from 'react'\r\nimport { Row,Col,Card, FormGroup,Input, Label } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport CompletedTaskTable from './MyCompletedTaskTable'\r\nimport GetTaskListitem from '../../Services/SharePoint/GetListItems'\r\nimport GetTaskListItems from '../../Services/SharePoint/GetCompletedTaskItem'\r\nimport GetCompletedTask from '../../Services/SharePoint/GetCompletedTask'\r\nimport GetCurrentUserid from '../../Services/SharePoint/GetCurrentLoinUserID'\r\nimport GetCurrentUser from '../../Services/SharePoint/GetCurrentLoginUser'\r\nimport './NewRequest.css'\r\nexport default class MyCompletedTasks extends Component {\r\n    constructor(props, contex) {\r\n        super(props, contex);\r\n        this.state = {\r\n            loaded:false,\r\n            TaskDetails: null,\r\n            PONumber:\"\",\r\n            CurrentUserID:\"1\",\r\n            CurrentStatus:\"All\",\r\n            DataValue: \"True\",\r\n            DepartmentFilter:\"All\",\r\n        };\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n      this.getuserid();  \r\n     this.GetTaskDetails();\r\n\r\n     //setInterval(this.GetTaskDetails, 100000000);\r\n    }\r\n    getuserid = ()=>{\r\n        let CurrentUserID;\r\n        \r\n        \r\n    }\r\n    GetTaskDetails = ()=>{\r\n\r\n        GetCurrentUserid().then(u => \r\n            this.setState({\r\n            CurrentUserID:u,\r\n            })\r\n        );\r\n\r\n        GetTaskListItems('Completed Tasks','10').then(r => \r\n                this.setState({\r\n                    TaskDetails:r.filter(item => item.AssignedToId === this.state.CurrentUserID & item.Data=== this.state.DataValue),\r\n                    loaded:true,\r\n                    CurrentStatus:\"Completed\"\r\n                })    \r\n            )\r\n        \r\n        \r\n       //console.log(this.state.CurrentUserID)\r\n    }\r\n    \r\n    \r\n\r\n    async filterItems(requestData) {\r\n        \r\n        let result = [];\r\n        for(let item of this.state.TaskDetails) {\r\n          if(item.PONumber.indexOf(requestData.PONumber) > -1) {\r\n            result.push(item);\r\n          }\r\n        }\r\n        return Promise.resolve(result);\r\n      }\r\n\r\n    handleSearchInput = (event)=>{\r\n        this.setState({PONumber: event.target.value});\r\n    }\r\n\r\n    searchData =() => {\r\n        this.filterItems({ PONumber: this.state.PONumber}).then(items => {\r\n            this.setState({TaskDetails: items});\r\n        });\r\n    }\r\n\r\n    resetSearch = ()=>{\r\n        this.GetTaskDetails();\r\n    }\r\n    \r\n\r\n    filterStatus = (event)=>{\r\n        this.setState({\r\n            CurrentStatus:event.target.value,\r\n            loaded:false,\r\n            TaskDetails: null,\r\n            PONumber:\"\",\r\n            \r\n           \r\n        })  \r\n    }\r\n    \r\n\r\n    render() {\r\n        if(this.state.CurrentStatus === \"Completed\"){\r\n            //setTimeout(() => {  console.log(\"World!\"); }, 2000);\r\n           GetCompletedTask('Completed Tasks',this.state.CurrentUserID).then(r => \r\n               this.setState({\r\n                   TaskDetails:r.filter(item => item.AssignedToId || item.AssignedToId0 === this.state.CurrentUserID  & item.Data=== this.state.DataValue),\r\n                   CurrentStatus:\"\"\r\n                })    \r\n           )\r\n        }\r\n        //console.log(\"Task Details in grid\", this.state.TaskDetails);\r\n        //console.log(\"Currnet User in state\", this.state.CurrentUserID);\r\n        //console.log(\"Currnet Status\", this.state.CurrentStatus);\r\n        //console.log(this.state.CurrentUserID)\r\n        const tableContainer = {width:\"100%\"};\r\n        const headerStyle = {display:\"flex\"};\r\n        const parentcontainer = {minWidth:\"100%\",maxWidth:\"100%\"};\r\n        let TaskDetails = this.state.TaskDetails;\r\n        \r\n        \r\n        \r\n       \r\n        return (\r\n            \r\n        <div style={parentcontainer}>    \r\n            <Card style={tableContainer} className=\"mb-3\">\r\n                <Row>\r\n                        <Col style={headerStyle} className=\"form-header-container\" md={12}>\r\n                            <FontAwesomeIcon icon={faSearch} className=\"mr-2\"/>\r\n                            <h5 className=\"form-header\">Filter My Tasks</h5>\r\n                        </Col>\r\n                </Row>\r\n                <form className=\"form-horizontal\">\r\n                            <FormGroup row>                                                          \r\n                            <div className=\"col-md-4\">\r\n                                    <Label for=\"exampleSelect\" className=\"mt-2\">Search PO</Label>                                    \r\n                                    <div className=\"input-group-append\">\r\n                                    <Input type=\"text\" placeholder=\"Enter PO Number\" value={this.state.PONumber} onChange={this.handleSearchInput}/>\r\n                                        <button className=\"btn btn-sm btn-success mr-2 ml-2 btn-cancel\" onClick={this.searchData} type=\"button\">Search</button>\r\n                                        <button className=\"btn btn-sm btn-danger\" onClick={this.resetSearch} type=\"button\">Reset</button>\r\n                                    </div>\r\n                            </div>                               \r\n                            </FormGroup>\r\n                        </form>     \r\n                </Card>\r\n                \r\n            <CompletedTaskTable TaskDetails={TaskDetails}></CompletedTaskTable>\r\n                \r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Container, Row } from 'reactstrap';\r\nimport NavBar from '../Navbar/Navbar';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport NewPOSearch from './NewPOSearch'\r\nimport NewRequest from './NewRequest'\r\nimport MyRequests from './MyRequests'\r\nimport MyTasks from './MyTasks'\r\nimport Home from './Home'\r\nimport Dashboard from './Dashboard'\r\nimport ExportPORequest from './ExportRequest'\r\nimport MyCompletedTasks from './MyCompletedTask'\r\n\r\nexport default props => (\r\n  \r\n    <Container fluid={true} className={classNames('content', {'is-open': props.isOpen})}>\r\n      <NavBar toggle={props.toggle}/>\r\n      <Row  className=\"m-1 bg-white\">\r\n      <Switch>\r\n      <Route exact path=\"/\"  component={Home} />\r\n        <Route exact path=\"/po-search\"  component={NewPOSearch} />\r\n        <Route exact path=\"/po-request/:mode\"  component={NewRequest} />\r\n        <Route exact path=\"/po-request/:mode/:id\"  component={NewRequest} />\r\n        <Route exact path=\"/pages/my-tasks\" component={MyTasks}/>\r\n        <Route exact path=\"/pages/my-completed\" component={MyCompletedTasks}/>\r\n        <Route exact path=\"/pages/my-requests\" component={MyRequests} />\r\n        <Route exact path=\"/search-po\" component={() => \"Search PO\" } />\r\n        <Route exact path=\"/contact\" component={() => \"Contact\" } />\r\n        <Route exact path=\"/pages/Dashboard\" component={Dashboard} />  \r\n        <Route exact path=\"/pages/ExportPO\" component={ExportPORequest} />               \r\n      </Switch>\r\n      </Row>\r\n\r\n    </Container>\r\n)\r\n","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport SideBar from './components/sidebar/SideBar';\r\nimport Content from './components/content/Content';\r\nimport { MemoryRouter as Router } from \"react-router-dom\";\r\n\r\nexport default (props) => {\r\n\r\n  const [isOpen, setOpen] = useState(true)\r\n  const toggle = () => setOpen(!isOpen)\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App wrapper\">\r\n        <SideBar toggle={toggle} isOpen={isOpen} />\r\n        <Content toggle={toggle} isOpen={isOpen} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}